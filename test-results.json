{
  "numFailedTestSuites": 17,
  "numFailedTests": 48,
  "numPassedTestSuites": 15,
  "numPassedTests": 134,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 4,
  "numTodoTests": 0,
  "numTotalTestSuites": 32,
  "numTotalTests": 182,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1733816534604,
  "success": false,
  "testResults": [
    {
      "assertionResults": [
        {
          "ancestorTitles": ["UsersService"],
          "duration": 70,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UsersService should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["UsersService", "create"],
          "duration": 140,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UsersService create should create a user successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a user successfully"
        },
        {
          "ancestorTitles": ["UsersService", "create"],
          "duration": 86,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mConflictException\u001b[39m\nReceived constructor: \u001b[31mBadRequestException\u001b[39m\n\nReceived message: \u001b[31m\"Email đã tồn tại: user1@example.com\"\u001b[39m\n\n    \u001b[0m \u001b[90m 51 |\u001b[39m\n     \u001b[90m 52 |\u001b[39m       \u001b[36mif\u001b[39m (\u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39misEmailExist(email)) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 53 |\u001b[39m         \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mBadRequestException\u001b[39m(\u001b[32m`Email đã tồn tại: ${email}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 54 |\u001b[39m       }\n     \u001b[90m 55 |\u001b[39m\n     \u001b[90m 56 |\u001b[39m       \u001b[36mif\u001b[39m (\u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39misPhoneExist(phone)) {\u001b[0m\n\n      \u001b[2mat UsersService.create (\u001b[22msrc/modules/users/users.service.ts\u001b[2m:53:15)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/users/users.service.spec.ts\u001b[2m:87:7)\u001b[22m",
                "pass": false
              },
              "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mConflictException\u001b[39m\nReceived constructor: \u001b[31mBadRequestException\u001b[39m\n\nReceived message: \u001b[31m\"Email đã tồn tại: user1@example.com\"\u001b[39m\n\n    \u001b[0m \u001b[90m 51 |\u001b[39m\n     \u001b[90m 52 |\u001b[39m       \u001b[36mif\u001b[39m (\u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39misEmailExist(email)) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 53 |\u001b[39m         \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mBadRequestException\u001b[39m(\u001b[32m`Email đã tồn tại: ${email}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 54 |\u001b[39m       }\n     \u001b[90m 55 |\u001b[39m\n     \u001b[90m 56 |\u001b[39m       \u001b[36mif\u001b[39m (\u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39misPhoneExist(phone)) {\u001b[0m\n\n      \u001b[2mat UsersService.create (\u001b[22msrc/modules/users/users.service.ts\u001b[2m:53:15)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/users/users.service.spec.ts\u001b[2m:87:7)\u001b[22m"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mConflictException\u001b[39m\nReceived constructor: \u001b[31mBadRequestException\u001b[39m\n\nReceived message: \u001b[31m\"Email đã tồn tại: user1@example.com\"\u001b[39m\n\n    \u001b[0m \u001b[90m 51 |\u001b[39m\n     \u001b[90m 52 |\u001b[39m       \u001b[36mif\u001b[39m (\u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39misEmailExist(email)) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 53 |\u001b[39m         \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mBadRequestException\u001b[39m(\u001b[32m`Email đã tồn tại: ${email}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 54 |\u001b[39m       }\n     \u001b[90m 55 |\u001b[39m\n     \u001b[90m 56 |\u001b[39m       \u001b[36mif\u001b[39m (\u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39misPhoneExist(phone)) {\u001b[0m\n\n      \u001b[2mat UsersService.create (\u001b[22msrc/modules/users/users.service.ts\u001b[2m:53:15)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/users/users.service.spec.ts\u001b[2m:87:7)\u001b[22m\n    at Object.toThrow (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\expect\\build\\index.js:218:22)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\users\\users.service.spec.ts:87:59)\n    at Promise.then.completed (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"
          ],
          "fullName": "UsersService create should throw ConflictException if email already exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should throw ConflictException if email already exists"
        },
        {
          "ancestorTitles": ["UsersService", "findOneById"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UsersService findOneById should return a user by ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a user by ID"
        },
        {
          "ancestorTitles": ["UsersService", "findOneById"],
          "duration": 57,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể tìm người dùng\"\u001b[39m\n\n    \u001b[0m \u001b[90m 168 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 169 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi tìm người dùng với ID ${id}:`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 170 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể tìm người dùng'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 171 |\u001b[39m     }\n     \u001b[90m 172 |\u001b[39m   }\n     \u001b[90m 173 |\u001b[39m\u001b[0m\n\n      \u001b[2mat UsersService.findOneById (\u001b[22msrc/modules/users/users.service.ts\u001b[2m:170:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/users/users.service.spec.ts\u001b[2m:106:7)\u001b[22m",
                "pass": false
              },
              "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể tìm người dùng\"\u001b[39m\n\n    \u001b[0m \u001b[90m 168 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 169 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi tìm người dùng với ID ${id}:`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 170 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể tìm người dùng'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 171 |\u001b[39m     }\n     \u001b[90m 172 |\u001b[39m   }\n     \u001b[90m 173 |\u001b[39m\u001b[0m\n\n      \u001b[2mat UsersService.findOneById (\u001b[22msrc/modules/users/users.service.ts\u001b[2m:170:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/users/users.service.spec.ts\u001b[2m:106:7)\u001b[22m"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể tìm người dùng\"\u001b[39m\n\n    \u001b[0m \u001b[90m 168 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 169 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi tìm người dùng với ID ${id}:`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 170 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể tìm người dùng'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 171 |\u001b[39m     }\n     \u001b[90m 172 |\u001b[39m   }\n     \u001b[90m 173 |\u001b[39m\u001b[0m\n\n      \u001b[2mat UsersService.findOneById (\u001b[22msrc/modules/users/users.service.ts\u001b[2m:170:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/users/users.service.spec.ts\u001b[2m:106:7)\u001b[22m\n    at Object.toThrow (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\expect\\build\\index.js:218:22)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\users\\users.service.spec.ts:106:54)\n    at Promise.then.completed (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"
          ],
          "fullName": "UsersService findOneById should throw NotFoundException if user is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should throw NotFoundException if user is not found"
        },
        {
          "ancestorTitles": ["UsersService", "remove"],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UsersService remove should remove a user successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove a user successfully"
        }
      ],
      "endTime": 1733816552879,
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUsersService › create › should throw ConflictException if email already exists\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected constructor: \u001b[32mConflictException\u001b[39m\n    Received constructor: \u001b[31mBadRequestException\u001b[39m\n\n    Received message: \u001b[31m\"Email đã tồn tại: user1@example.com\"\u001b[39m\n\n        \u001b[0m \u001b[90m 51 |\u001b[39m\n         \u001b[90m 52 |\u001b[39m       \u001b[36mif\u001b[39m (\u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39misEmailExist(email)) {\n        \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 53 |\u001b[39m         \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mBadRequestException\u001b[39m(\u001b[32m`Email đã tồn tại: ${email}`\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n         \u001b[90m 54 |\u001b[39m       }\n         \u001b[90m 55 |\u001b[39m\n         \u001b[90m 56 |\u001b[39m       \u001b[36mif\u001b[39m (\u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39misPhoneExist(phone)) {\u001b[0m\n\n          \u001b[2mat UsersService.create (\u001b[22msrc/modules/users/users.service.ts\u001b[2m:53:15)\u001b[22m\n          \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/users/users.service.spec.ts\u001b[2m:87:7)\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 85 |\u001b[39m       mockRepository\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValue({ email\u001b[33m:\u001b[39m createUserDto\u001b[33m.\u001b[39memail })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 86 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 87 |\u001b[39m       \u001b[36mawait\u001b[39m expect(service\u001b[33m.\u001b[39mcreate(createUserDto))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow(\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 88 |\u001b[39m         \u001b[33mConflictException\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 89 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 90 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toThrow (\u001b[22m\u001b[2m../node_modules/expect/build/index.js\u001b[2m:218:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/users/users.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:87:59)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUsersService › findOneById › should throw NotFoundException if user is not found\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected constructor: \u001b[32mNotFoundException\u001b[39m\n    Received constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\n    Received message: \u001b[31m\"Không thể tìm người dùng\"\u001b[39m\n\n        \u001b[0m \u001b[90m 168 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n         \u001b[90m 169 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi tìm người dùng với ID ${id}:`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n        \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 170 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể tìm người dùng'\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n         \u001b[90m 171 |\u001b[39m     }\n         \u001b[90m 172 |\u001b[39m   }\n         \u001b[90m 173 |\u001b[39m\u001b[0m\n\n          \u001b[2mat UsersService.findOneById (\u001b[22msrc/modules/users/users.service.ts\u001b[2m:170:13)\u001b[22m\n          \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/users/users.service.spec.ts\u001b[2m:106:7)\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 104 |\u001b[39m       mockRepository\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValue(\u001b[36mnull\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 105 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 106 |\u001b[39m       \u001b[36mawait\u001b[39m expect(service\u001b[33m.\u001b[39mfindOneById(\u001b[35m999\u001b[39m))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow(\u001b[33mNotFoundException\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 107 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 108 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 109 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toThrow (\u001b[22m\u001b[2m../node_modules/expect/build/index.js\u001b[2m:218:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/users/users.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:106:54)\u001b[22m\u001b[2m\u001b[22m\n",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\users\\users.service.spec.ts",
      "startTime": 1733816535457,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["UnitsService"],
          "duration": 208,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnitsService should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["UnitsService", "create"],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnitsService create should create a unit successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a unit successfully"
        },
        {
          "ancestorTitles": ["UnitsService", "create"],
          "duration": 26,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnitsService create should throw ConflictException if unit name already exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw ConflictException if unit name already exists"
        },
        {
          "ancestorTitles": ["UnitsService", "findAll"],
          "duration": 35,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": {
                  "meta": {
                    "current": 1,
                    "pageSize": 10,
                    "pages": 0,
                    "total": 0
                  },
                  "results": []
                },
                "expected": { "meta": {}, "results": [] },
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 6\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"meta\": Object {},\u001b[39m\n\u001b[31m+   \"meta\": Object {\u001b[39m\n\u001b[31m+     \"current\": 1,\u001b[39m\n\u001b[31m+     \"pageSize\": 10,\u001b[39m\n\u001b[31m+     \"pages\": 0,\u001b[39m\n\u001b[31m+     \"total\": 0,\u001b[39m\n\u001b[31m+   },\u001b[39m\n\u001b[2m    \"results\": Array [],\u001b[22m\n\u001b[2m  }\u001b[22m",
                "name": "toEqual",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 6\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"meta\": Object {},\u001b[39m\n\u001b[31m+   \"meta\": Object {\u001b[39m\n\u001b[31m+     \"current\": 1,\u001b[39m\n\u001b[31m+     \"pageSize\": 10,\u001b[39m\n\u001b[31m+     \"pages\": 0,\u001b[39m\n\u001b[31m+     \"total\": 0,\u001b[39m\n\u001b[31m+   },\u001b[39m\n\u001b[2m    \"results\": Array [],\u001b[22m\n\u001b[2m  }\u001b[22m\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\units\\units.service.spec.ts:74:24)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
          ],
          "fullName": "UnitsService findAll should return all units",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should return all units"
        },
        {
          "ancestorTitles": ["UnitsService", "findOne"],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnitsService findOne should return a unit by ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a unit by ID"
        },
        {
          "ancestorTitles": ["UnitsService", "findOne"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnitsService findOne should throw NotFoundException if unit is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw NotFoundException if unit is not found"
        },
        {
          "ancestorTitles": ["UnitsService", "update"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnitsService update should update a unit successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should update a unit successfully"
        },
        {
          "ancestorTitles": ["UnitsService", "update"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnitsService update should throw ConflictException if unit name already exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw ConflictException if unit name already exists"
        },
        {
          "ancestorTitles": ["UnitsService", "remove"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnitsService remove should remove a unit successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove a unit successfully"
        },
        {
          "ancestorTitles": ["UnitsService", "remove"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnitsService remove should throw NotFoundException if unit is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw NotFoundException if unit is not found"
        }
      ],
      "endTime": 1733816553625,
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUnitsService › findAll › should return all units\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 6\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[32m-   \"meta\": Object {},\u001b[39m\n    \u001b[31m+   \"meta\": Object {\u001b[39m\n    \u001b[31m+     \"current\": 1,\u001b[39m\n    \u001b[31m+     \"pageSize\": 10,\u001b[39m\n    \u001b[31m+     \"pages\": 0,\u001b[39m\n    \u001b[31m+     \"total\": 0,\u001b[39m\n    \u001b[31m+   },\u001b[39m\n    \u001b[2m    \"results\": Array [],\u001b[22m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 72 |\u001b[39m       \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m service\u001b[33m.\u001b[39mfindAll(\u001b[32m''\u001b[39m\u001b[33m,\u001b[39m \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m \u001b[35m10\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 73 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 74 |\u001b[39m       expect(response)\u001b[33m.\u001b[39mtoEqual(result)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 75 |\u001b[39m       expect(mockRepository\u001b[33m.\u001b[39mfind)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 76 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 77 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/units/units.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:74:24)\u001b[22m\u001b[2m\u001b[22m\n",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\units\\units.service.spec.ts",
      "startTime": 1733816535809,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["SuppliersService"],
          "duration": 132,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SuppliersService should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["SuppliersService", "create"],
          "duration": 35,
          "failureDetails": [
            {
              "response": {
                "message": "Không thể tạo nhà cung cấp, vui lòng thử lại sau.",
                "error": "Internal Server Error",
                "statusCode": 500
              },
              "status": 500,
              "options": {},
              "message": "Không thể tạo nhà cung cấp, vui lòng thử lại sau.",
              "name": "InternalServerErrorException"
            }
          ],
          "failureMessages": [
            "InternalServerErrorException: Không thể tạo nhà cung cấp, vui lòng thử lại sau.\n    at SuppliersService.create (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\suppliers\\suppliers.service.ts:105:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\suppliers\\suppliers.service.spec.ts:85:22)"
          ],
          "fullName": "SuppliersService create should create a supplier successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should create a supplier successfully"
        },
        {
          "ancestorTitles": ["SuppliersService", "create"],
          "duration": 86,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mConflictException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể tạo nhà cung cấp, vui lòng thử lại sau.\"\u001b[39m\n\n    \u001b[0m \u001b[90m 103 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 104 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo nhà cung cấp:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 105 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 106 |\u001b[39m         \u001b[32m'Không thể tạo nhà cung cấp, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 107 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 108 |\u001b[39m     }\u001b[0m\n\n      \u001b[2mat SuppliersService.create (\u001b[22msrc/modules/suppliers/suppliers.service.ts\u001b[2m:105:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/suppliers/suppliers.service.spec.ts\u001b[2m:102:7)\u001b[22m",
                "pass": false
              },
              "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mConflictException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể tạo nhà cung cấp, vui lòng thử lại sau.\"\u001b[39m\n\n    \u001b[0m \u001b[90m 103 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 104 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo nhà cung cấp:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 105 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 106 |\u001b[39m         \u001b[32m'Không thể tạo nhà cung cấp, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 107 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 108 |\u001b[39m     }\u001b[0m\n\n      \u001b[2mat SuppliersService.create (\u001b[22msrc/modules/suppliers/suppliers.service.ts\u001b[2m:105:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/suppliers/suppliers.service.spec.ts\u001b[2m:102:7)\u001b[22m"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mConflictException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể tạo nhà cung cấp, vui lòng thử lại sau.\"\u001b[39m\n\n    \u001b[0m \u001b[90m 103 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 104 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo nhà cung cấp:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 105 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 106 |\u001b[39m         \u001b[32m'Không thể tạo nhà cung cấp, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 107 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 108 |\u001b[39m     }\u001b[0m\n\n      \u001b[2mat SuppliersService.create (\u001b[22msrc/modules/suppliers/suppliers.service.ts\u001b[2m:105:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/suppliers/suppliers.service.spec.ts\u001b[2m:102:7)\u001b[22m\n    at Object.toThrow (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\expect\\build\\index.js:218:22)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\suppliers\\suppliers.service.spec.ts:102:63)\n    at Promise.then.completed (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"
          ],
          "fullName": "SuppliersService create should throw ConflictException if supplier name already exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should throw ConflictException if supplier name already exists"
        },
        {
          "ancestorTitles": ["SuppliersService", "findOne"],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SuppliersService findOne should return a supplier by ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a supplier by ID"
        },
        {
          "ancestorTitles": ["SuppliersService", "findOne"],
          "duration": 47,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể truy xuất dữ liệu nhà cung cấp, vui lòng thử lại sau.\"\u001b[39m\n\n    \u001b[0m \u001b[90m 170 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 171 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi tìm nhà cung cấp với id: ${id}`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 172 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 173 |\u001b[39m         \u001b[32m'Không thể truy xuất dữ liệu nhà cung cấp, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 174 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 175 |\u001b[39m     }\u001b[0m\n\n      \u001b[2mat SuppliersService.findOne (\u001b[22msrc/modules/suppliers/suppliers.service.ts\u001b[2m:172:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/suppliers/suppliers.service.spec.ts\u001b[2m:121:7)\u001b[22m",
                "pass": false
              },
              "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể truy xuất dữ liệu nhà cung cấp, vui lòng thử lại sau.\"\u001b[39m\n\n    \u001b[0m \u001b[90m 170 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 171 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi tìm nhà cung cấp với id: ${id}`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 172 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 173 |\u001b[39m         \u001b[32m'Không thể truy xuất dữ liệu nhà cung cấp, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 174 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 175 |\u001b[39m     }\u001b[0m\n\n      \u001b[2mat SuppliersService.findOne (\u001b[22msrc/modules/suppliers/suppliers.service.ts\u001b[2m:172:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/suppliers/suppliers.service.spec.ts\u001b[2m:121:7)\u001b[22m"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể truy xuất dữ liệu nhà cung cấp, vui lòng thử lại sau.\"\u001b[39m\n\n    \u001b[0m \u001b[90m 170 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 171 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi tìm nhà cung cấp với id: ${id}`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 172 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 173 |\u001b[39m         \u001b[32m'Không thể truy xuất dữ liệu nhà cung cấp, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 174 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 175 |\u001b[39m     }\u001b[0m\n\n      \u001b[2mat SuppliersService.findOne (\u001b[22msrc/modules/suppliers/suppliers.service.ts\u001b[2m:172:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/suppliers/suppliers.service.spec.ts\u001b[2m:121:7)\u001b[22m\n    at Object.toThrow (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\expect\\build\\index.js:218:22)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\suppliers\\suppliers.service.spec.ts:121:50)\n    at Promise.then.completed (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"
          ],
          "fullName": "SuppliersService findOne should throw NotFoundException if supplier is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should throw NotFoundException if supplier is not found"
        },
        {
          "ancestorTitles": ["SuppliersService", "remove"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SuppliersService remove should remove a supplier successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove a supplier successfully"
        }
      ],
      "endTime": 1733816553779,
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSuppliersService › create › should create a supplier successfully\u001b[39m\u001b[22m\n\n    InternalServerErrorException: Không thể tạo nhà cung cấp, vui lòng thử lại sau.\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 103 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\u001b[22m\n\u001b[2m     \u001b[90m 104 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo nhà cung cấp:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 105 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 106 |\u001b[39m         \u001b[32m'Không thể tạo nhà cung cấp, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 107 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 108 |\u001b[39m     }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat SuppliersService.create (\u001b[22m\u001b[2mmodules/suppliers/suppliers.service.ts\u001b[2m:105:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/suppliers/suppliers.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:85:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSuppliersService › create › should throw ConflictException if supplier name already exists\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected constructor: \u001b[32mConflictException\u001b[39m\n    Received constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\n    Received message: \u001b[31m\"Không thể tạo nhà cung cấp, vui lòng thử lại sau.\"\u001b[39m\n\n        \u001b[0m \u001b[90m 103 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n         \u001b[90m 104 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo nhà cung cấp:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n        \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 105 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n         \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n         \u001b[90m 106 |\u001b[39m         \u001b[32m'Không thể tạo nhà cung cấp, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n         \u001b[90m 107 |\u001b[39m       )\u001b[33m;\u001b[39m\n         \u001b[90m 108 |\u001b[39m     }\u001b[0m\n\n          \u001b[2mat SuppliersService.create (\u001b[22msrc/modules/suppliers/suppliers.service.ts\u001b[2m:105:13)\u001b[22m\n          \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/suppliers/suppliers.service.spec.ts\u001b[2m:102:7)\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 100 |\u001b[39m       mockSupplierRepository\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValue({ name\u001b[33m:\u001b[39m \u001b[32m'Supplier A'\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 101 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 102 |\u001b[39m       \u001b[36mawait\u001b[39m expect(service\u001b[33m.\u001b[39mcreate(createSupplierDto))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow(\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 103 |\u001b[39m         \u001b[33mConflictException\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 104 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 105 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toThrow (\u001b[22m\u001b[2m../node_modules/expect/build/index.js\u001b[2m:218:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/suppliers/suppliers.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:102:63)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSuppliersService › findOne › should throw NotFoundException if supplier is not found\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected constructor: \u001b[32mNotFoundException\u001b[39m\n    Received constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\n    Received message: \u001b[31m\"Không thể truy xuất dữ liệu nhà cung cấp, vui lòng thử lại sau.\"\u001b[39m\n\n        \u001b[0m \u001b[90m 170 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n         \u001b[90m 171 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi tìm nhà cung cấp với id: ${id}`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n        \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 172 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n         \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n         \u001b[90m 173 |\u001b[39m         \u001b[32m'Không thể truy xuất dữ liệu nhà cung cấp, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n         \u001b[90m 174 |\u001b[39m       )\u001b[33m;\u001b[39m\n         \u001b[90m 175 |\u001b[39m     }\u001b[0m\n\n          \u001b[2mat SuppliersService.findOne (\u001b[22msrc/modules/suppliers/suppliers.service.ts\u001b[2m:172:13)\u001b[22m\n          \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/suppliers/suppliers.service.spec.ts\u001b[2m:121:7)\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 119 |\u001b[39m       mockSupplierRepository\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValue(\u001b[36mnull\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 120 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 121 |\u001b[39m       \u001b[36mawait\u001b[39m expect(service\u001b[33m.\u001b[39mfindOne(\u001b[35m999\u001b[39m))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow(\u001b[33mNotFoundException\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 122 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 123 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 124 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toThrow (\u001b[22m\u001b[2m../node_modules/expect/build/index.js\u001b[2m:218:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/suppliers/suppliers.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:121:50)\u001b[22m\u001b[2m\u001b[22m\n",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\suppliers\\suppliers.service.spec.ts",
      "startTime": 1733816535591,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["ParametersService"],
          "duration": 139,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ParametersService should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["ParametersService", "create"],
          "duration": 97,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ParametersService create should create a parameter successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a parameter successfully"
        },
        {
          "ancestorTitles": ["ParametersService", "create"],
          "duration": 186,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mConflictException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể tạo tham số, vui lòng thử lại sau.\"\u001b[39m\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 33 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo tham số:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m         \u001b[32m'Không thể tạo tham số, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 36 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m     }\u001b[0m\n\n      \u001b[2mat ParametersService.create (\u001b[22msrc/modules/parameters/parameters.service.ts\u001b[2m:34:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/parameters/parameters.service.spec.ts\u001b[2m:74:7)\u001b[22m",
                "pass": false
              },
              "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mConflictException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể tạo tham số, vui lòng thử lại sau.\"\u001b[39m\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 33 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo tham số:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m         \u001b[32m'Không thể tạo tham số, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 36 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m     }\u001b[0m\n\n      \u001b[2mat ParametersService.create (\u001b[22msrc/modules/parameters/parameters.service.ts\u001b[2m:34:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/parameters/parameters.service.spec.ts\u001b[2m:74:7)\u001b[22m"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mConflictException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể tạo tham số, vui lòng thử lại sau.\"\u001b[39m\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 33 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo tham số:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m         \u001b[32m'Không thể tạo tham số, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 36 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m     }\u001b[0m\n\n      \u001b[2mat ParametersService.create (\u001b[22msrc/modules/parameters/parameters.service.ts\u001b[2m:34:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/parameters/parameters.service.spec.ts\u001b[2m:74:7)\u001b[22m\n    at Object.toThrow (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\expect\\build\\index.js:218:22)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\parameters\\parameters.service.spec.ts:74:55)\n    at Promise.then.completed (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"
          ],
          "fullName": "ParametersService create should throw ConflictException if parameter name already exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should throw ConflictException if parameter name already exists"
        },
        {
          "ancestorTitles": ["ParametersService", "findAll"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ParametersService findAll should return all parameters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return all parameters"
        },
        {
          "ancestorTitles": ["ParametersService", "findOne"],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ParametersService findOne should return a parameter by ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a parameter by ID"
        },
        {
          "ancestorTitles": ["ParametersService", "findOne"],
          "duration": 15,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể truy xuất dữ liệu tham số, vui lòng thử lại sau.\"\u001b[39m\n\n    \u001b[0m \u001b[90m 66 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 67 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi tìm tham số với id: ${id}`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 68 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 69 |\u001b[39m         \u001b[32m'Không thể truy xuất dữ liệu tham số, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 70 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 71 |\u001b[39m     }\u001b[0m\n\n      \u001b[2mat ParametersService.findOne (\u001b[22msrc/modules/parameters/parameters.service.ts\u001b[2m:68:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/parameters/parameters.service.spec.ts\u001b[2m:106:7)\u001b[22m",
                "pass": false
              },
              "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể truy xuất dữ liệu tham số, vui lòng thử lại sau.\"\u001b[39m\n\n    \u001b[0m \u001b[90m 66 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 67 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi tìm tham số với id: ${id}`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 68 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 69 |\u001b[39m         \u001b[32m'Không thể truy xuất dữ liệu tham số, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 70 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 71 |\u001b[39m     }\u001b[0m\n\n      \u001b[2mat ParametersService.findOne (\u001b[22msrc/modules/parameters/parameters.service.ts\u001b[2m:68:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/parameters/parameters.service.spec.ts\u001b[2m:106:7)\u001b[22m"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể truy xuất dữ liệu tham số, vui lòng thử lại sau.\"\u001b[39m\n\n    \u001b[0m \u001b[90m 66 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 67 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi tìm tham số với id: ${id}`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 68 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 69 |\u001b[39m         \u001b[32m'Không thể truy xuất dữ liệu tham số, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 70 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 71 |\u001b[39m     }\u001b[0m\n\n      \u001b[2mat ParametersService.findOne (\u001b[22msrc/modules/parameters/parameters.service.ts\u001b[2m:68:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/parameters/parameters.service.spec.ts\u001b[2m:106:7)\u001b[22m\n    at Object.toThrow (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\expect\\build\\index.js:218:22)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\parameters\\parameters.service.spec.ts:106:50)\n    at Promise.then.completed (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"
          ],
          "fullName": "ParametersService findOne should throw NotFoundException if parameter not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should throw NotFoundException if parameter not found"
        },
        {
          "ancestorTitles": ["ParametersService", "update"],
          "duration": 20,
          "failureDetails": [
            {
              "response": {
                "message": "Không thể cập nhật tham số, vui lòng thử lại sau.",
                "error": "Internal Server Error",
                "statusCode": 500
              },
              "status": 500,
              "options": {},
              "message": "Không thể cập nhật tham số, vui lòng thử lại sau.",
              "name": "InternalServerErrorException"
            }
          ],
          "failureMessages": [
            "InternalServerErrorException: Không thể cập nhật tham số, vui lòng thử lại sau.\n    at ParametersService.update (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\parameters\\parameters.service.ts:99:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\parameters\\parameters.service.spec.ts:119:22)"
          ],
          "fullName": "ParametersService update should update a parameter successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should update a parameter successfully"
        },
        {
          "ancestorTitles": ["ParametersService", "update"],
          "duration": 20,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mConflictException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể cập nhật tham số, vui lòng thử lại sau.\"\u001b[39m\n\n    \u001b[0m \u001b[90m  97 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m  98 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi cập nhật tham số với id: ${id}`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  99 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 100 |\u001b[39m         \u001b[32m'Không thể cập nhật tham số, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 101 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 102 |\u001b[39m     }\u001b[0m\n\n      \u001b[2mat ParametersService.update (\u001b[22msrc/modules/parameters/parameters.service.ts\u001b[2m:99:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/parameters/parameters.service.spec.ts\u001b[2m:135:7)\u001b[22m",
                "pass": false
              },
              "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mConflictException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể cập nhật tham số, vui lòng thử lại sau.\"\u001b[39m\n\n    \u001b[0m \u001b[90m  97 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m  98 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi cập nhật tham số với id: ${id}`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  99 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 100 |\u001b[39m         \u001b[32m'Không thể cập nhật tham số, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 101 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 102 |\u001b[39m     }\u001b[0m\n\n      \u001b[2mat ParametersService.update (\u001b[22msrc/modules/parameters/parameters.service.ts\u001b[2m:99:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/parameters/parameters.service.spec.ts\u001b[2m:135:7)\u001b[22m"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mConflictException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể cập nhật tham số, vui lòng thử lại sau.\"\u001b[39m\n\n    \u001b[0m \u001b[90m  97 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m  98 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi cập nhật tham số với id: ${id}`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  99 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 100 |\u001b[39m         \u001b[32m'Không thể cập nhật tham số, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 101 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 102 |\u001b[39m     }\u001b[0m\n\n      \u001b[2mat ParametersService.update (\u001b[22msrc/modules/parameters/parameters.service.ts\u001b[2m:99:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/parameters/parameters.service.spec.ts\u001b[2m:135:7)\u001b[22m\n    at Object.toThrow (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\expect\\build\\index.js:218:22)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\parameters\\parameters.service.spec.ts:135:58)\n    at Promise.then.completed (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"
          ],
          "fullName": "ParametersService update should throw ConflictException if name already exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should throw ConflictException if name already exists"
        },
        {
          "ancestorTitles": ["ParametersService", "remove"],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ParametersService remove should remove a parameter successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove a parameter successfully"
        },
        {
          "ancestorTitles": ["ParametersService", "remove"],
          "duration": 10,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể xóa tham số, vui lòng thử lại sau.\"\u001b[39m\n\n    \u001b[0m \u001b[90m 113 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 114 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi xóa tham số với id: ${id}`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 115 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 116 |\u001b[39m         \u001b[32m'Không thể xóa tham số, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 117 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 118 |\u001b[39m     }\u001b[0m\n\n      \u001b[2mat ParametersService.remove (\u001b[22msrc/modules/parameters/parameters.service.ts\u001b[2m:115:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/parameters/parameters.service.spec.ts\u001b[2m:155:7)\u001b[22m",
                "pass": false
              },
              "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể xóa tham số, vui lòng thử lại sau.\"\u001b[39m\n\n    \u001b[0m \u001b[90m 113 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 114 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi xóa tham số với id: ${id}`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 115 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 116 |\u001b[39m         \u001b[32m'Không thể xóa tham số, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 117 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 118 |\u001b[39m     }\u001b[0m\n\n      \u001b[2mat ParametersService.remove (\u001b[22msrc/modules/parameters/parameters.service.ts\u001b[2m:115:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/parameters/parameters.service.spec.ts\u001b[2m:155:7)\u001b[22m"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể xóa tham số, vui lòng thử lại sau.\"\u001b[39m\n\n    \u001b[0m \u001b[90m 113 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 114 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi xóa tham số với id: ${id}`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 115 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 116 |\u001b[39m         \u001b[32m'Không thể xóa tham số, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 117 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 118 |\u001b[39m     }\u001b[0m\n\n      \u001b[2mat ParametersService.remove (\u001b[22msrc/modules/parameters/parameters.service.ts\u001b[2m:115:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/parameters/parameters.service.spec.ts\u001b[2m:155:7)\u001b[22m\n    at Object.toThrow (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\expect\\build\\index.js:218:22)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\parameters\\parameters.service.spec.ts:155:49)\n    at Promise.then.completed (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"
          ],
          "fullName": "ParametersService remove should throw NotFoundException if parameter not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should throw NotFoundException if parameter not found"
        }
      ],
      "endTime": 1733816553806,
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mParametersService › create › should throw ConflictException if parameter name already exists\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected constructor: \u001b[32mConflictException\u001b[39m\n    Received constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\n    Received message: \u001b[31m\"Không thể tạo tham số, vui lòng thử lại sau.\"\u001b[39m\n\n        \u001b[0m \u001b[90m 32 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n         \u001b[90m 33 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo tham số:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n        \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n         \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n         \u001b[90m 35 |\u001b[39m         \u001b[32m'Không thể tạo tham số, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n         \u001b[90m 36 |\u001b[39m       )\u001b[33m;\u001b[39m\n         \u001b[90m 37 |\u001b[39m     }\u001b[0m\n\n          \u001b[2mat ParametersService.create (\u001b[22msrc/modules/parameters/parameters.service.ts\u001b[2m:34:13)\u001b[22m\n          \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/parameters/parameters.service.spec.ts\u001b[2m:74:7)\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 72 |\u001b[39m       mockRepository\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValue({ id\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m \u001b[33m...\u001b[39mcreateDto })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 73 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 74 |\u001b[39m       \u001b[36mawait\u001b[39m expect(service\u001b[33m.\u001b[39mcreate(createDto))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow(\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 75 |\u001b[39m         \u001b[33mConflictException\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 76 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 77 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toThrow (\u001b[22m\u001b[2m../node_modules/expect/build/index.js\u001b[2m:218:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/parameters/parameters.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:74:55)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mParametersService › findOne › should throw NotFoundException if parameter not found\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected constructor: \u001b[32mNotFoundException\u001b[39m\n    Received constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\n    Received message: \u001b[31m\"Không thể truy xuất dữ liệu tham số, vui lòng thử lại sau.\"\u001b[39m\n\n        \u001b[0m \u001b[90m 66 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n         \u001b[90m 67 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi tìm tham số với id: ${id}`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n        \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 68 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n         \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n         \u001b[90m 69 |\u001b[39m         \u001b[32m'Không thể truy xuất dữ liệu tham số, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n         \u001b[90m 70 |\u001b[39m       )\u001b[33m;\u001b[39m\n         \u001b[90m 71 |\u001b[39m     }\u001b[0m\n\n          \u001b[2mat ParametersService.findOne (\u001b[22msrc/modules/parameters/parameters.service.ts\u001b[2m:68:13)\u001b[22m\n          \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/parameters/parameters.service.spec.ts\u001b[2m:106:7)\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 104 |\u001b[39m       mockRepository\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValue(\u001b[36mnull\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 105 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 106 |\u001b[39m       \u001b[36mawait\u001b[39m expect(service\u001b[33m.\u001b[39mfindOne(\u001b[35m999\u001b[39m))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow(\u001b[33mNotFoundException\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 107 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 108 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 109 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toThrow (\u001b[22m\u001b[2m../node_modules/expect/build/index.js\u001b[2m:218:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/parameters/parameters.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:106:50)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mParametersService › update › should update a parameter successfully\u001b[39m\u001b[22m\n\n    InternalServerErrorException: Không thể cập nhật tham số, vui lòng thử lại sau.\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  97 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\u001b[22m\n\u001b[2m     \u001b[90m  98 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi cập nhật tham số với id: ${id}`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  99 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 100 |\u001b[39m         \u001b[32m'Không thể cập nhật tham số, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 101 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 102 |\u001b[39m     }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ParametersService.update (\u001b[22m\u001b[2mmodules/parameters/parameters.service.ts\u001b[2m:99:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/parameters/parameters.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:119:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mParametersService › update › should throw ConflictException if name already exists\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected constructor: \u001b[32mConflictException\u001b[39m\n    Received constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\n    Received message: \u001b[31m\"Không thể cập nhật tham số, vui lòng thử lại sau.\"\u001b[39m\n\n        \u001b[0m \u001b[90m  97 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n         \u001b[90m  98 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi cập nhật tham số với id: ${id}`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n        \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  99 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n         \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n         \u001b[90m 100 |\u001b[39m         \u001b[32m'Không thể cập nhật tham số, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n         \u001b[90m 101 |\u001b[39m       )\u001b[33m;\u001b[39m\n         \u001b[90m 102 |\u001b[39m     }\u001b[0m\n\n          \u001b[2mat ParametersService.update (\u001b[22msrc/modules/parameters/parameters.service.ts\u001b[2m:99:13)\u001b[22m\n          \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/parameters/parameters.service.spec.ts\u001b[2m:135:7)\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 133 |\u001b[39m       })\u001b[33m;\u001b[39m \u001b[90m// Check for conflicting name\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 134 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 135 |\u001b[39m       \u001b[36mawait\u001b[39m expect(service\u001b[33m.\u001b[39mupdate(\u001b[35m1\u001b[39m\u001b[33m,\u001b[39m updateDto))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow(\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 136 |\u001b[39m         \u001b[33mConflictException\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 137 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 138 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toThrow (\u001b[22m\u001b[2m../node_modules/expect/build/index.js\u001b[2m:218:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/parameters/parameters.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:135:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mParametersService › remove › should throw NotFoundException if parameter not found\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected constructor: \u001b[32mNotFoundException\u001b[39m\n    Received constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\n    Received message: \u001b[31m\"Không thể xóa tham số, vui lòng thử lại sau.\"\u001b[39m\n\n        \u001b[0m \u001b[90m 113 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n         \u001b[90m 114 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi xóa tham số với id: ${id}`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n        \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 115 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n         \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n         \u001b[90m 116 |\u001b[39m         \u001b[32m'Không thể xóa tham số, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n         \u001b[90m 117 |\u001b[39m       )\u001b[33m;\u001b[39m\n         \u001b[90m 118 |\u001b[39m     }\u001b[0m\n\n          \u001b[2mat ParametersService.remove (\u001b[22msrc/modules/parameters/parameters.service.ts\u001b[2m:115:13)\u001b[22m\n          \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/parameters/parameters.service.spec.ts\u001b[2m:155:7)\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 153 |\u001b[39m       mockRepository\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValue(\u001b[36mnull\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 154 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 155 |\u001b[39m       \u001b[36mawait\u001b[39m expect(service\u001b[33m.\u001b[39mremove(\u001b[35m999\u001b[39m))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow(\u001b[33mNotFoundException\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 156 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 157 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 158 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toThrow (\u001b[22m\u001b[2m../node_modules/expect/build/index.js\u001b[2m:218:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/parameters/parameters.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:155:49)\u001b[22m\u001b[2m\u001b[22m\n",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\parameters\\parameters.service.spec.ts",
      "startTime": 1733816535731,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["OrderDetailsService"],
          "duration": 85,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "OrderDetailsService should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["OrderDetailsService", "create"],
          "duration": 103,
          "failureDetails": [
            {
              "response": {
                "message": "Không thể tạo chi tiết đơn hàng, vui lòng thử lại sau.",
                "error": "Internal Server Error",
                "statusCode": 500
              },
              "status": 500,
              "options": {},
              "message": "Không thể tạo chi tiết đơn hàng, vui lòng thử lại sau.",
              "name": "InternalServerErrorException"
            }
          ],
          "failureMessages": [
            "InternalServerErrorException: Không thể tạo chi tiết đơn hàng, vui lòng thử lại sau.\n    at OrderDetailsService.create (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\order_details\\order_details.service.ts:52:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\order_details\\order_details.service.spec.ts:86:22)"
          ],
          "fullName": "OrderDetailsService create should create an order detail successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should create an order detail successfully"
        },
        {
          "ancestorTitles": ["OrderDetailsService", "create"],
          "duration": 101,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected message: \u001b[32m\"Không t\u001b[7mìm thấy đơn hàng\u001b[27m\"\u001b[39m\nReceived message: \u001b[31m\"Không t\u001b[7mhể tạo chi tiết đơn hàng, vui lòng thử lại sau.\u001b[27m\"\u001b[39m\n\n    \u001b[0m \u001b[90m 50 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 51 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo chi tiết đơn hàng:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 53 |\u001b[39m         \u001b[32m'Không thể tạo chi tiết đơn hàng, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 54 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 55 |\u001b[39m     }\u001b[0m\n\n      \u001b[2mat OrderDetailsService.create (\u001b[22msrc/modules/order_details/order_details.service.ts\u001b[2m:52:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/order_details/order_details.service.spec.ts\u001b[2m:104:7)\u001b[22m",
                "pass": false
              },
              "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected message: \u001b[32m\"Không t\u001b[7mìm thấy đơn hàng\u001b[27m\"\u001b[39m\nReceived message: \u001b[31m\"Không t\u001b[7mhể tạo chi tiết đơn hàng, vui lòng thử lại sau.\u001b[27m\"\u001b[39m\n\n    \u001b[0m \u001b[90m 50 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 51 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo chi tiết đơn hàng:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 53 |\u001b[39m         \u001b[32m'Không thể tạo chi tiết đơn hàng, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 54 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 55 |\u001b[39m     }\u001b[0m\n\n      \u001b[2mat OrderDetailsService.create (\u001b[22msrc/modules/order_details/order_details.service.ts\u001b[2m:52:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/order_details/order_details.service.spec.ts\u001b[2m:104:7)\u001b[22m"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected message: \u001b[32m\"Không t\u001b[7mìm thấy đơn hàng\u001b[27m\"\u001b[39m\nReceived message: \u001b[31m\"Không t\u001b[7mhể tạo chi tiết đơn hàng, vui lòng thử lại sau.\u001b[27m\"\u001b[39m\n\n    \u001b[0m \u001b[90m 50 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 51 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo chi tiết đơn hàng:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 53 |\u001b[39m         \u001b[32m'Không thể tạo chi tiết đơn hàng, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 54 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 55 |\u001b[39m     }\u001b[0m\n\n      \u001b[2mat OrderDetailsService.create (\u001b[22msrc/modules/order_details/order_details.service.ts\u001b[2m:52:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/order_details/order_details.service.spec.ts\u001b[2m:104:7)\u001b[22m\n    at Object.toThrow (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\expect\\build\\index.js:218:22)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\order_details\\order_details.service.spec.ts:104:55)\n    at Promise.then.completed (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"
          ],
          "fullName": "OrderDetailsService create should throw NotFoundException if order is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should throw NotFoundException if order is not found"
        },
        {
          "ancestorTitles": ["OrderDetailsService", "create"],
          "duration": 23,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected message: \u001b[32m\"Không t\u001b[7mìm thấy mẫu sản phẩm\u001b[27m\"\u001b[39m\nReceived message: \u001b[31m\"Không t\u001b[7mhể tạo chi tiết đơn hàng, vui lòng thử lại sau.\u001b[27m\"\u001b[39m\n\n    \u001b[0m \u001b[90m 50 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 51 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo chi tiết đơn hàng:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 53 |\u001b[39m         \u001b[32m'Không thể tạo chi tiết đơn hàng, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 54 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 55 |\u001b[39m     }\u001b[0m\n\n      \u001b[2mat OrderDetailsService.create (\u001b[22msrc/modules/order_details/order_details.service.ts\u001b[2m:52:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/order_details/order_details.service.spec.ts\u001b[2m:121:7)\u001b[22m",
                "pass": false
              },
              "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected message: \u001b[32m\"Không t\u001b[7mìm thấy mẫu sản phẩm\u001b[27m\"\u001b[39m\nReceived message: \u001b[31m\"Không t\u001b[7mhể tạo chi tiết đơn hàng, vui lòng thử lại sau.\u001b[27m\"\u001b[39m\n\n    \u001b[0m \u001b[90m 50 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 51 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo chi tiết đơn hàng:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 53 |\u001b[39m         \u001b[32m'Không thể tạo chi tiết đơn hàng, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 54 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 55 |\u001b[39m     }\u001b[0m\n\n      \u001b[2mat OrderDetailsService.create (\u001b[22msrc/modules/order_details/order_details.service.ts\u001b[2m:52:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/order_details/order_details.service.spec.ts\u001b[2m:121:7)\u001b[22m"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected message: \u001b[32m\"Không t\u001b[7mìm thấy mẫu sản phẩm\u001b[27m\"\u001b[39m\nReceived message: \u001b[31m\"Không t\u001b[7mhể tạo chi tiết đơn hàng, vui lòng thử lại sau.\u001b[27m\"\u001b[39m\n\n    \u001b[0m \u001b[90m 50 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 51 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo chi tiết đơn hàng:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 53 |\u001b[39m         \u001b[32m'Không thể tạo chi tiết đơn hàng, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 54 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 55 |\u001b[39m     }\u001b[0m\n\n      \u001b[2mat OrderDetailsService.create (\u001b[22msrc/modules/order_details/order_details.service.ts\u001b[2m:52:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/order_details/order_details.service.spec.ts\u001b[2m:121:7)\u001b[22m\n    at Object.toThrow (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\expect\\build\\index.js:218:22)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\order_details\\order_details.service.spec.ts:121:55)\n    at Promise.then.completed (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"
          ],
          "fullName": "OrderDetailsService create should throw NotFoundException if product unit is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should throw NotFoundException if product unit is not found"
        },
        {
          "ancestorTitles": ["OrderDetailsService", "create"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "OrderDetailsService create should throw InternalServerErrorException if creation fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw InternalServerErrorException if creation fails"
        }
      ],
      "endTime": 1733816554064,
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mOrderDetailsService › create › should create an order detail successfully\u001b[39m\u001b[22m\n\n    InternalServerErrorException: Không thể tạo chi tiết đơn hàng, vui lòng thử lại sau.\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 50 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\u001b[22m\n\u001b[2m     \u001b[90m 51 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo chi tiết đơn hàng:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 52 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 53 |\u001b[39m         \u001b[32m'Không thể tạo chi tiết đơn hàng, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 54 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 55 |\u001b[39m     }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat OrderDetailsService.create (\u001b[22m\u001b[2mmodules/order_details/order_details.service.ts\u001b[2m:52:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/order_details/order_details.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:86:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mOrderDetailsService › create › should throw NotFoundException if order is not found\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected message: \u001b[32m\"Không t\u001b[7mìm thấy đơn hàng\u001b[27m\"\u001b[39m\n    Received message: \u001b[31m\"Không t\u001b[7mhể tạo chi tiết đơn hàng, vui lòng thử lại sau.\u001b[27m\"\u001b[39m\n\n        \u001b[0m \u001b[90m 50 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n         \u001b[90m 51 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo chi tiết đơn hàng:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n        \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n         \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n         \u001b[90m 53 |\u001b[39m         \u001b[32m'Không thể tạo chi tiết đơn hàng, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n         \u001b[90m 54 |\u001b[39m       )\u001b[33m;\u001b[39m\n         \u001b[90m 55 |\u001b[39m     }\u001b[0m\n\n          \u001b[2mat OrderDetailsService.create (\u001b[22msrc/modules/order_details/order_details.service.ts\u001b[2m:52:13)\u001b[22m\n          \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/order_details/order_details.service.spec.ts\u001b[2m:104:7)\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 102 |\u001b[39m       mockOrdersService\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValue(\u001b[36mnull\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 103 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 104 |\u001b[39m       \u001b[36mawait\u001b[39m expect(service\u001b[33m.\u001b[39mcreate(createDto))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow(\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 105 |\u001b[39m         \u001b[36mnew\u001b[39m \u001b[33mNotFoundException\u001b[39m(\u001b[32m'Không tìm thấy đơn hàng'\u001b[39m)\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 106 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 107 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toThrow (\u001b[22m\u001b[2m../node_modules/expect/build/index.js\u001b[2m:218:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/order_details/order_details.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:104:55)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mOrderDetailsService › create › should throw NotFoundException if product unit is not found\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected message: \u001b[32m\"Không t\u001b[7mìm thấy mẫu sản phẩm\u001b[27m\"\u001b[39m\n    Received message: \u001b[31m\"Không t\u001b[7mhể tạo chi tiết đơn hàng, vui lòng thử lại sau.\u001b[27m\"\u001b[39m\n\n        \u001b[0m \u001b[90m 50 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n         \u001b[90m 51 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo chi tiết đơn hàng:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n        \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\n         \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n         \u001b[90m 53 |\u001b[39m         \u001b[32m'Không thể tạo chi tiết đơn hàng, vui lòng thử lại sau.'\u001b[39m\u001b[33m,\u001b[39m\n         \u001b[90m 54 |\u001b[39m       )\u001b[33m;\u001b[39m\n         \u001b[90m 55 |\u001b[39m     }\u001b[0m\n\n          \u001b[2mat OrderDetailsService.create (\u001b[22msrc/modules/order_details/order_details.service.ts\u001b[2m:52:13)\u001b[22m\n          \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/order_details/order_details.service.spec.ts\u001b[2m:121:7)\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 119 |\u001b[39m       mockProductUnitsService\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValue(\u001b[36mnull\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 120 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 121 |\u001b[39m       \u001b[36mawait\u001b[39m expect(service\u001b[33m.\u001b[39mcreate(createDto))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow(\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 122 |\u001b[39m         \u001b[36mnew\u001b[39m \u001b[33mNotFoundException\u001b[39m(\u001b[32m'Không tìm thấy mẫu sản phẩm'\u001b[39m)\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 123 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 124 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toThrow (\u001b[22m\u001b[2m../node_modules/expect/build/index.js\u001b[2m:218:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/order_details/order_details.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:121:55)\u001b[22m\u001b[2m\u001b[22m\n",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\order_details\\order_details.service.spec.ts",
      "startTime": 1733816535616,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["UsersController"],
          "duration": 53,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UsersController should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["UsersController", "createCustomer"],
          "duration": 30,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": {
                  "id": 1,
                  "name": "Customer 1",
                  "phone": "123456789"
                },
                "expected": {
                  "message": "Tạo mới khách hàng thành công",
                  "data": {
                    "id": 1,
                    "name": "Customer 1",
                    "phone": "123456789"
                  }
                },
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"data\": Object {\u001b[39m\n\u001b[2m    \"id\": 1,\u001b[22m\n\u001b[2m    \"name\": \"Customer 1\",\u001b[22m\n\u001b[2m    \"phone\": \"123456789\",\u001b[22m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"message\": \"Tạo mới khách hàng thành công\",\u001b[39m\n\u001b[2m  }\u001b[22m",
                "name": "toEqual",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"data\": Object {\u001b[39m\n\u001b[2m    \"id\": 1,\u001b[22m\n\u001b[2m    \"name\": \"Customer 1\",\u001b[22m\n\u001b[2m    \"phone\": \"123456789\",\u001b[22m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"message\": \"Tạo mới khách hàng thành công\",\u001b[39m\n\u001b[2m  }\u001b[22m\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\users\\users.controller.spec.ts:49:66)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
          ],
          "fullName": "UsersController createCustomer should create a customer successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should create a customer successfully"
        },
        {
          "ancestorTitles": ["UsersController", "createCustomer"],
          "duration": 19,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UsersController createCustomer should throw a ConflictException if phone already exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw a ConflictException if phone already exists"
        },
        {
          "ancestorTitles": ["UsersController", "create"],
          "duration": 21,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": {
                  "id": 1,
                  "name": "Staff 1",
                  "email": "staff1@example.com",
                  "password": "123456",
                  "address": "123 Main St",
                  "phone": "987654321",
                  "groupId": 2
                },
                "expected": {
                  "message": "Tạo mới tài khoản nhân viên thành công",
                  "data": {
                    "id": 1,
                    "name": "Staff 1",
                    "email": "staff1@example.com",
                    "password": "123456",
                    "address": "123 Main St",
                    "phone": "987654321",
                    "groupId": 2
                  }
                },
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"data\": Object {\u001b[39m\n\u001b[2m    \"address\": \"123 Main St\",\u001b[22m\n\u001b[2m    \"email\": \"staff1@example.com\",\u001b[22m\n\u001b[2m    \"groupId\": 2,\u001b[22m\n\u001b[2m    \"id\": 1,\u001b[22m\n\u001b[2m    \"name\": \"Staff 1\",\u001b[22m\n\u001b[2m    \"password\": \"123456\",\u001b[22m\n\u001b[2m    \"phone\": \"987654321\",\u001b[22m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"message\": \"Tạo mới tài khoản nhân viên thành công\",\u001b[39m\n\u001b[2m  }\u001b[22m",
                "name": "toEqual",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"data\": Object {\u001b[39m\n\u001b[2m    \"address\": \"123 Main St\",\u001b[22m\n\u001b[2m    \"email\": \"staff1@example.com\",\u001b[22m\n\u001b[2m    \"groupId\": 2,\u001b[22m\n\u001b[2m    \"id\": 1,\u001b[22m\n\u001b[2m    \"name\": \"Staff 1\",\u001b[22m\n\u001b[2m    \"password\": \"123456\",\u001b[22m\n\u001b[2m    \"phone\": \"987654321\",\u001b[22m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"message\": \"Tạo mới tài khoản nhân viên thành công\",\u001b[39m\n\u001b[2m  }\u001b[22m\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\users\\users.controller.spec.ts:86:54)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
          ],
          "fullName": "UsersController create should create a staff successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should create a staff successfully"
        },
        {
          "ancestorTitles": ["UsersController", "findAll"],
          "duration": 9,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": { "meta": {}, "results": [] },
                "expected": {
                  "message": "Trả về danh sách các khách hàng thành công",
                  "data": { "meta": {}, "results": [] }
                },
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"data\": Object {\u001b[39m\n\u001b[2m    \"meta\": Object {},\u001b[22m\n\u001b[2m    \"results\": Array [],\u001b[22m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"message\": \"Trả về danh sách các khách hàng thành công\",\u001b[39m\n\u001b[2m  }\u001b[22m",
                "name": "toEqual",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"data\": Object {\u001b[39m\n\u001b[2m    \"meta\": Object {},\u001b[22m\n\u001b[2m    \"results\": Array [],\u001b[22m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"message\": \"Trả về danh sách các khách hàng thành công\",\u001b[39m\n\u001b[2m  }\u001b[22m\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\users\\users.controller.spec.ts:99:60)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
          ],
          "fullName": "UsersController findAll should return all users",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should return all users"
        },
        {
          "ancestorTitles": ["UsersController", "findOne"],
          "duration": 6,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": { "id": 1, "name": "User 1" },
                "expected": {
                  "message": "Trả về thông tin chi tiết khách hàng thành công",
                  "data": { "id": 1, "name": "User 1" }
                },
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"data\": Object {\u001b[39m\n\u001b[2m    \"id\": 1,\u001b[22m\n\u001b[2m    \"name\": \"User 1\",\u001b[22m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"message\": \"Trả về thông tin chi tiết khách hàng thành công\",\u001b[39m\n\u001b[2m  }\u001b[22m",
                "name": "toEqual",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"data\": Object {\u001b[39m\n\u001b[2m    \"id\": 1,\u001b[22m\n\u001b[2m    \"name\": \"User 1\",\u001b[22m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"message\": \"Trả về thông tin chi tiết khách hàng thành công\",\u001b[39m\n\u001b[2m  }\u001b[22m\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\users\\users.controller.spec.ts:112:43)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
          ],
          "fullName": "UsersController findOne should return a user by ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should return a user by ID"
        },
        {
          "ancestorTitles": ["UsersController", "findOne"],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UsersController findOne should throw NotFoundException if user is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw NotFoundException if user is not found"
        },
        {
          "ancestorTitles": ["UsersController", "update"],
          "duration": 7,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": { "id": 1, "name": "Updated User" },
                "expected": {
                  "message": "Cập nhật thông tin chi tiết khách hàng thành công",
                  "data": { "id": 1, "name": "Updated User" }
                },
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"data\": Object {\u001b[39m\n\u001b[2m    \"id\": 1,\u001b[22m\n\u001b[2m    \"name\": \"Updated User\",\u001b[22m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"message\": \"Cập nhật thông tin chi tiết khách hàng thành công\",\u001b[39m\n\u001b[2m  }\u001b[22m",
                "name": "toEqual",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"data\": Object {\u001b[39m\n\u001b[2m    \"id\": 1,\u001b[22m\n\u001b[2m    \"name\": \"Updated User\",\u001b[22m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"message\": \"Cập nhật thông tin chi tiết khách hàng thành công\",\u001b[39m\n\u001b[2m  }\u001b[22m\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\users\\users.controller.spec.ts:134:57)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
          ],
          "fullName": "UsersController update should update a user successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should update a user successfully"
        },
        {
          "ancestorTitles": ["UsersController", "remove"],
          "duration": 8,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": { "id": 1, "name": "User 1" },
                "expected": {
                  "message": "Xóa người dùng thành công",
                  "data": { "id": 1, "name": "User 1" }
                },
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"data\": Object {\u001b[39m\n\u001b[2m    \"id\": 1,\u001b[22m\n\u001b[2m    \"name\": \"User 1\",\u001b[22m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"message\": \"Xóa người dùng thành công\",\u001b[39m\n\u001b[2m  }\u001b[22m",
                "name": "toEqual",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"data\": Object {\u001b[39m\n\u001b[2m    \"id\": 1,\u001b[22m\n\u001b[2m    \"name\": \"User 1\",\u001b[22m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"message\": \"Xóa người dùng thành công\",\u001b[39m\n\u001b[2m  }\u001b[22m\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\users\\users.controller.spec.ts:147:42)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
          ],
          "fullName": "UsersController remove should remove a user successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should remove a user successfully"
        }
      ],
      "endTime": 1733816554587,
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUsersController › createCustomer › should create a customer successfully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 3\u001b[39m\n    \u001b[31m+ Received  + 0\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[32m-   \"data\": Object {\u001b[39m\n    \u001b[2m    \"id\": 1,\u001b[22m\n    \u001b[2m    \"name\": \"Customer 1\",\u001b[22m\n    \u001b[2m    \"phone\": \"123456789\",\u001b[22m\n    \u001b[32m-   },\u001b[39m\n    \u001b[32m-   \"message\": \"Tạo mới khách hàng thành công\",\u001b[39m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 47 |\u001b[39m       mockUsersService\u001b[33m.\u001b[39mcreateCustomer\u001b[33m.\u001b[39mmockResolvedValue(result)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 48 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 49 |\u001b[39m       expect(\u001b[36mawait\u001b[39m controller\u001b[33m.\u001b[39mcreateCustomer(createCustomerDto))\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 50 |\u001b[39m         message\u001b[33m:\u001b[39m \u001b[32m'Tạo mới khách hàng thành công'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 51 |\u001b[39m         data\u001b[33m:\u001b[39m result\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 52 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/users/users.controller.spec.ts\u001b[39m\u001b[0m\u001b[2m:49:66)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUsersController › create › should create a staff successfully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 3\u001b[39m\n    \u001b[31m+ Received  + 0\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[32m-   \"data\": Object {\u001b[39m\n    \u001b[2m    \"address\": \"123 Main St\",\u001b[22m\n    \u001b[2m    \"email\": \"staff1@example.com\",\u001b[22m\n    \u001b[2m    \"groupId\": 2,\u001b[22m\n    \u001b[2m    \"id\": 1,\u001b[22m\n    \u001b[2m    \"name\": \"Staff 1\",\u001b[22m\n    \u001b[2m    \"password\": \"123456\",\u001b[22m\n    \u001b[2m    \"phone\": \"987654321\",\u001b[22m\n    \u001b[32m-   },\u001b[39m\n    \u001b[32m-   \"message\": \"Tạo mới tài khoản nhân viên thành công\",\u001b[39m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 84 |\u001b[39m       mockUsersService\u001b[33m.\u001b[39mcreate\u001b[33m.\u001b[39mmockResolvedValue(result)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 85 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 86 |\u001b[39m       expect(\u001b[36mawait\u001b[39m controller\u001b[33m.\u001b[39mcreate(createUserDto))\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 87 |\u001b[39m         message\u001b[33m:\u001b[39m \u001b[32m'Tạo mới tài khoản nhân viên thành công'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 88 |\u001b[39m         data\u001b[33m:\u001b[39m result\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 89 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/users/users.controller.spec.ts\u001b[39m\u001b[0m\u001b[2m:86:54)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUsersController › findAll › should return all users\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 3\u001b[39m\n    \u001b[31m+ Received  + 0\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[32m-   \"data\": Object {\u001b[39m\n    \u001b[2m    \"meta\": Object {},\u001b[22m\n    \u001b[2m    \"results\": Array [],\u001b[22m\n    \u001b[32m-   },\u001b[39m\n    \u001b[32m-   \"message\": \"Trả về danh sách các khách hàng thành công\",\u001b[39m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  97 |\u001b[39m       mockUsersService\u001b[33m.\u001b[39mfindAll\u001b[33m.\u001b[39mmockResolvedValue(result)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  98 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  99 |\u001b[39m       expect(\u001b[36mawait\u001b[39m controller\u001b[33m.\u001b[39mfindAll(\u001b[32m''\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'1'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'10'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'2'\u001b[39m))\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 100 |\u001b[39m         message\u001b[33m:\u001b[39m \u001b[32m'Trả về danh sách các khách hàng thành công'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 101 |\u001b[39m         data\u001b[33m:\u001b[39m result\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 102 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/users/users.controller.spec.ts\u001b[39m\u001b[0m\u001b[2m:99:60)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUsersController › findOne › should return a user by ID\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 3\u001b[39m\n    \u001b[31m+ Received  + 0\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[32m-   \"data\": Object {\u001b[39m\n    \u001b[2m    \"id\": 1,\u001b[22m\n    \u001b[2m    \"name\": \"User 1\",\u001b[22m\n    \u001b[32m-   },\u001b[39m\n    \u001b[32m-   \"message\": \"Trả về thông tin chi tiết khách hàng thành công\",\u001b[39m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 110 |\u001b[39m       mockUsersService\u001b[33m.\u001b[39mfindOneById\u001b[33m.\u001b[39mmockResolvedValue(result)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 111 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 112 |\u001b[39m       expect(\u001b[36mawait\u001b[39m controller\u001b[33m.\u001b[39mfindOne(\u001b[35m1\u001b[39m))\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 113 |\u001b[39m         message\u001b[33m:\u001b[39m \u001b[32m'Trả về thông tin chi tiết khách hàng thành công'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 114 |\u001b[39m         data\u001b[33m:\u001b[39m result\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 115 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/users/users.controller.spec.ts\u001b[39m\u001b[0m\u001b[2m:112:43)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUsersController › update › should update a user successfully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 3\u001b[39m\n    \u001b[31m+ Received  + 0\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[32m-   \"data\": Object {\u001b[39m\n    \u001b[2m    \"id\": 1,\u001b[22m\n    \u001b[2m    \"name\": \"Updated User\",\u001b[22m\n    \u001b[32m-   },\u001b[39m\n    \u001b[32m-   \"message\": \"Cập nhật thông tin chi tiết khách hàng thành công\",\u001b[39m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 132 |\u001b[39m       mockUsersService\u001b[33m.\u001b[39mupdate\u001b[33m.\u001b[39mmockResolvedValue(result)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 133 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 134 |\u001b[39m       expect(\u001b[36mawait\u001b[39m controller\u001b[33m.\u001b[39mupdate(\u001b[35m1\u001b[39m\u001b[33m,\u001b[39m updateUserDto))\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 135 |\u001b[39m         message\u001b[33m:\u001b[39m \u001b[32m'Cập nhật thông tin chi tiết khách hàng thành công'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 136 |\u001b[39m         data\u001b[33m:\u001b[39m result\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 137 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/users/users.controller.spec.ts\u001b[39m\u001b[0m\u001b[2m:134:57)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUsersController › remove › should remove a user successfully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 3\u001b[39m\n    \u001b[31m+ Received  + 0\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[32m-   \"data\": Object {\u001b[39m\n    \u001b[2m    \"id\": 1,\u001b[22m\n    \u001b[2m    \"name\": \"User 1\",\u001b[22m\n    \u001b[32m-   },\u001b[39m\n    \u001b[32m-   \"message\": \"Xóa người dùng thành công\",\u001b[39m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 145 |\u001b[39m       mockUsersService\u001b[33m.\u001b[39mremove\u001b[33m.\u001b[39mmockResolvedValue(result)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 146 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 147 |\u001b[39m       expect(\u001b[36mawait\u001b[39m controller\u001b[33m.\u001b[39mremove(\u001b[35m1\u001b[39m))\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 148 |\u001b[39m         message\u001b[33m:\u001b[39m \u001b[32m'Xóa người dùng thành công'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 149 |\u001b[39m         data\u001b[33m:\u001b[39m result\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 150 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/users/users.controller.spec.ts\u001b[39m\u001b[0m\u001b[2m:147:42)\u001b[22m\u001b[2m\u001b[22m\n",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\users\\users.controller.spec.ts",
      "startTime": 1733816535513,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["OrdersController"],
          "duration": 42,
          "failureDetails": [
            {
              "type": "OrdersService",
              "context": {
                "index": 0,
                "dependencies": ["OrderRepository", null, {}],
                "name": "OrderRepository"
              },
              "metadata": { "id": "28bcb035666a7d4252385" },
              "moduleRef": { "id": "3b745ff22a28bcb035666" }
            }
          ],
          "failureMessages": [
            "Error: Nest can't resolve dependencies of the OrdersService (?, UsersService, OrderDetailsService). Please make sure that the argument \"OrderRepository\" at index [0] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If \"OrderRepository\" is a provider, is it part of the current RootTestModule?\n- If \"OrderRepository\" is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing \"OrderRepository\" */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:254:19)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at TestingInjector.resolveComponentInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:207:33)\n    at TestingInjector.resolveComponentInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-injector.js:19:45)\n    at resolveParam (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:128:38)\n    at async Promise.all (index 0)\n    at TestingInjector.resolveConstructorParams (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:143:27)\n    at TestingInjector.loadInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:70:13)\n    at TestingInjector.loadProvider (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:97:9)\n    at D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:56:13\n    at async Promise.all (index 3)\n    at TestingInstanceLoader.createInstancesOfProviders (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:55:9)\n    at D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-module.builder.js:74:9)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\orders\\orders.controller.spec.ts:9:35)"
          ],
          "fullName": "OrdersController should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should be defined"
        }
      ],
      "endTime": 1733816554660,
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mOrdersController › should be defined\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the OrdersService (?, UsersService, OrderDetailsService). Please make sure that the argument \"OrderRepository\" at index [0] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If \"OrderRepository\" is a provider, is it part of the current RootTestModule?\n    - If \"OrderRepository\" is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing \"OrderRepository\" */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  7 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  8 |\u001b[39m   beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  9 |\u001b[39m     \u001b[36mconst\u001b[39m module\u001b[33m:\u001b[39m \u001b[33mTestingModule\u001b[39m \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m       controllers\u001b[33m:\u001b[39m [\u001b[33mOrdersController\u001b[39m]\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m       providers\u001b[33m:\u001b[39m [\u001b[33mOrdersService\u001b[39m]\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     })\u001b[33m.\u001b[39mcompile()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:254:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:207:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:128:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 0)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:143:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:97:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 3)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/orders/orders.controller.spec.ts\u001b[39m\u001b[0m\u001b[2m:9:35)\u001b[22m\u001b[2m\u001b[22m\n",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\orders\\orders.controller.spec.ts",
      "startTime": 1733816535503,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["ProductUnitsService"],
          "duration": 16,
          "failureDetails": [
            {
              "type": "ProductUnitsService",
              "context": {
                "index": 1,
                "dependencies": ["ProductUnitRepository", {}, null]
              },
              "metadata": { "id": "df32bdb6e3409effdd153" },
              "moduleRef": { "id": "4860d474ffdf32bdb6e34" }
            }
          ],
          "failureMessages": [
            "Error: Nest can't resolve dependencies of the ProductUnitsService (ProductUnitRepository, ?, UnitsService). Please make sure that the argument ProductSamplesService at index [1] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If ProductSamplesService is a provider, is it part of the current RootTestModule?\n- If ProductSamplesService is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing ProductSamplesService */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:254:19)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at TestingInjector.resolveComponentInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:207:33)\n    at TestingInjector.resolveComponentInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-injector.js:19:45)\n    at resolveParam (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:128:38)\n    at async Promise.all (index 1)\n    at TestingInjector.resolveConstructorParams (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:143:27)\n    at TestingInjector.loadInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:70:13)\n    at TestingInjector.loadProvider (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:97:9)\n    at D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:56:13\n    at async Promise.all (index 3)\n    at TestingInstanceLoader.createInstancesOfProviders (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:55:9)\n    at D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-module.builder.js:74:9)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_units\\product_units.service.spec.ts:22:35)"
          ],
          "fullName": "ProductUnitsService should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["ProductUnitsService", "create"],
          "duration": 4,
          "failureDetails": [
            {
              "type": "ProductUnitsService",
              "context": {
                "index": 1,
                "dependencies": ["ProductUnitRepository", {}, null]
              },
              "metadata": { "id": "e524bc3fd9f95b5fd68fd" },
              "moduleRef": { "id": "9effdd1538e524bc3fd9f" }
            }
          ],
          "failureMessages": [
            "Error: Nest can't resolve dependencies of the ProductUnitsService (ProductUnitRepository, ?, UnitsService). Please make sure that the argument ProductSamplesService at index [1] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If ProductSamplesService is a provider, is it part of the current RootTestModule?\n- If ProductSamplesService is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing ProductSamplesService */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:254:19)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at TestingInjector.resolveComponentInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:207:33)\n    at TestingInjector.resolveComponentInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-injector.js:19:45)\n    at resolveParam (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:128:38)\n    at async Promise.all (index 1)\n    at TestingInjector.resolveConstructorParams (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:143:27)\n    at TestingInjector.loadInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:70:13)\n    at TestingInjector.loadProvider (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:97:9)\n    at D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:56:13\n    at async Promise.all (index 3)\n    at TestingInstanceLoader.createInstancesOfProviders (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:55:9)\n    at D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-module.builder.js:74:9)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_units\\product_units.service.spec.ts:22:35)"
          ],
          "fullName": "ProductUnitsService create should create a product unit successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should create a product unit successfully"
        },
        {
          "ancestorTitles": ["ProductUnitsService", "findAll"],
          "duration": 13,
          "failureDetails": [
            {
              "type": "ProductUnitsService",
              "context": {
                "index": 1,
                "dependencies": ["ProductUnitRepository", {}, null]
              },
              "metadata": { "id": "0d59675cbcdfed566ab5a" },
              "moduleRef": { "id": "5b5fd68fd10d59675cbcd" }
            }
          ],
          "failureMessages": [
            "Error: Nest can't resolve dependencies of the ProductUnitsService (ProductUnitRepository, ?, UnitsService). Please make sure that the argument ProductSamplesService at index [1] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If ProductSamplesService is a provider, is it part of the current RootTestModule?\n- If ProductSamplesService is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing ProductSamplesService */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:254:19)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at TestingInjector.resolveComponentInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:207:33)\n    at TestingInjector.resolveComponentInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-injector.js:19:45)\n    at resolveParam (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:128:38)\n    at async Promise.all (index 1)\n    at TestingInjector.resolveConstructorParams (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:143:27)\n    at TestingInjector.loadInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:70:13)\n    at TestingInjector.loadProvider (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:97:9)\n    at D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:56:13\n    at async Promise.all (index 3)\n    at TestingInstanceLoader.createInstancesOfProviders (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:55:9)\n    at D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-module.builder.js:74:9)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_units\\product_units.service.spec.ts:22:35)"
          ],
          "fullName": "ProductUnitsService findAll should return a list of product units",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should return a list of product units"
        },
        {
          "ancestorTitles": ["ProductUnitsService", "findOne"],
          "duration": 4,
          "failureDetails": [
            {
              "type": "ProductUnitsService",
              "context": {
                "index": 1,
                "dependencies": ["ProductUnitRepository", {}, null]
              },
              "metadata": { "id": "723551df67df81f95cbcf" },
              "moduleRef": { "id": "ed566ab5a2723551df67d" }
            }
          ],
          "failureMessages": [
            "Error: Nest can't resolve dependencies of the ProductUnitsService (ProductUnitRepository, ?, UnitsService). Please make sure that the argument ProductSamplesService at index [1] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If ProductSamplesService is a provider, is it part of the current RootTestModule?\n- If ProductSamplesService is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing ProductSamplesService */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:254:19)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at TestingInjector.resolveComponentInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:207:33)\n    at TestingInjector.resolveComponentInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-injector.js:19:45)\n    at resolveParam (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:128:38)\n    at async Promise.all (index 1)\n    at TestingInjector.resolveConstructorParams (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:143:27)\n    at TestingInjector.loadInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:70:13)\n    at TestingInjector.loadProvider (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:97:9)\n    at D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:56:13\n    at async Promise.all (index 3)\n    at TestingInstanceLoader.createInstancesOfProviders (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:55:9)\n    at D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-module.builder.js:74:9)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_units\\product_units.service.spec.ts:22:35)"
          ],
          "fullName": "ProductUnitsService findOne should return a single product unit by ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should return a single product unit by ID"
        },
        {
          "ancestorTitles": ["ProductUnitsService", "findOne"],
          "duration": 5,
          "failureDetails": [
            {
              "type": "ProductUnitsService",
              "context": {
                "index": 1,
                "dependencies": ["ProductUnitRepository", {}, null]
              },
              "metadata": { "id": "daa97730bcf8fef77dc41" },
              "moduleRef": { "id": "81f95cbcffdaa97730bcf" }
            }
          ],
          "failureMessages": [
            "Error: Nest can't resolve dependencies of the ProductUnitsService (ProductUnitRepository, ?, UnitsService). Please make sure that the argument ProductSamplesService at index [1] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If ProductSamplesService is a provider, is it part of the current RootTestModule?\n- If ProductSamplesService is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing ProductSamplesService */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:254:19)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at TestingInjector.resolveComponentInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:207:33)\n    at TestingInjector.resolveComponentInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-injector.js:19:45)\n    at resolveParam (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:128:38)\n    at async Promise.all (index 1)\n    at TestingInjector.resolveConstructorParams (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:143:27)\n    at TestingInjector.loadInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:70:13)\n    at TestingInjector.loadProvider (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:97:9)\n    at D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:56:13\n    at async Promise.all (index 3)\n    at TestingInstanceLoader.createInstancesOfProviders (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:55:9)\n    at D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-module.builder.js:74:9)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_units\\product_units.service.spec.ts:22:35)"
          ],
          "fullName": "ProductUnitsService findOne should throw NotFoundException if product unit not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should throw NotFoundException if product unit not found"
        },
        {
          "ancestorTitles": ["ProductUnitsService", "update"],
          "duration": 4,
          "failureDetails": [
            {
              "type": "ProductUnitsService",
              "context": {
                "index": 1,
                "dependencies": ["ProductUnitRepository", {}, null]
              },
              "metadata": { "id": "2489a6741f306d4186bbc" },
              "moduleRef": { "id": "fef77dc41e2489a6741f3" }
            }
          ],
          "failureMessages": [
            "Error: Nest can't resolve dependencies of the ProductUnitsService (ProductUnitRepository, ?, UnitsService). Please make sure that the argument ProductSamplesService at index [1] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If ProductSamplesService is a provider, is it part of the current RootTestModule?\n- If ProductSamplesService is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing ProductSamplesService */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:254:19)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at TestingInjector.resolveComponentInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:207:33)\n    at TestingInjector.resolveComponentInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-injector.js:19:45)\n    at resolveParam (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:128:38)\n    at async Promise.all (index 1)\n    at TestingInjector.resolveConstructorParams (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:143:27)\n    at TestingInjector.loadInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:70:13)\n    at TestingInjector.loadProvider (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:97:9)\n    at D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:56:13\n    at async Promise.all (index 3)\n    at TestingInstanceLoader.createInstancesOfProviders (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:55:9)\n    at D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-module.builder.js:74:9)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_units\\product_units.service.spec.ts:22:35)"
          ],
          "fullName": "ProductUnitsService update should update a product unit successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should update a product unit successfully"
        },
        {
          "ancestorTitles": ["ProductUnitsService", "remove"],
          "duration": 16,
          "failureDetails": [
            {
              "type": "ProductUnitsService",
              "context": {
                "index": 1,
                "dependencies": ["ProductUnitRepository", {}, null]
              },
              "metadata": { "id": "b232c90acd2a185a76f31" },
              "moduleRef": { "id": "6d4186bbc3b232c90acd2" }
            }
          ],
          "failureMessages": [
            "Error: Nest can't resolve dependencies of the ProductUnitsService (ProductUnitRepository, ?, UnitsService). Please make sure that the argument ProductSamplesService at index [1] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If ProductSamplesService is a provider, is it part of the current RootTestModule?\n- If ProductSamplesService is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing ProductSamplesService */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:254:19)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at TestingInjector.resolveComponentInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:207:33)\n    at TestingInjector.resolveComponentInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-injector.js:19:45)\n    at resolveParam (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:128:38)\n    at async Promise.all (index 1)\n    at TestingInjector.resolveConstructorParams (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:143:27)\n    at TestingInjector.loadInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:70:13)\n    at TestingInjector.loadProvider (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:97:9)\n    at D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:56:13\n    at async Promise.all (index 3)\n    at TestingInstanceLoader.createInstancesOfProviders (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:55:9)\n    at D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-module.builder.js:74:9)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_units\\product_units.service.spec.ts:22:35)"
          ],
          "fullName": "ProductUnitsService remove should remove a product unit successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should remove a product unit successfully"
        },
        {
          "ancestorTitles": ["ProductUnitsService", "remove"],
          "duration": 3,
          "failureDetails": [
            {
              "type": "ProductUnitsService",
              "context": {
                "index": 1,
                "dependencies": ["ProductUnitRepository", {}, null]
              },
              "metadata": { "id": "e3f38a99dcd79cf236878" },
              "moduleRef": { "id": "185a76f313e3f38a99dcd" }
            }
          ],
          "failureMessages": [
            "Error: Nest can't resolve dependencies of the ProductUnitsService (ProductUnitRepository, ?, UnitsService). Please make sure that the argument ProductSamplesService at index [1] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If ProductSamplesService is a provider, is it part of the current RootTestModule?\n- If ProductSamplesService is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing ProductSamplesService */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:254:19)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at TestingInjector.resolveComponentInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:207:33)\n    at TestingInjector.resolveComponentInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-injector.js:19:45)\n    at resolveParam (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:128:38)\n    at async Promise.all (index 1)\n    at TestingInjector.resolveConstructorParams (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:143:27)\n    at TestingInjector.loadInstance (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:70:13)\n    at TestingInjector.loadProvider (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\injector.js:97:9)\n    at D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:56:13\n    at async Promise.all (index 3)\n    at TestingInstanceLoader.createInstancesOfProviders (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:55:9)\n    at D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\@nestjs\\testing\\testing-module.builder.js:74:9)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_units\\product_units.service.spec.ts:22:35)"
          ],
          "fullName": "ProductUnitsService remove should throw NotFoundException if product unit not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should throw NotFoundException if product unit not found"
        }
      ],
      "endTime": 1733816555329,
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mProductUnitsService › should be defined\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the ProductUnitsService (ProductUnitRepository, ?, UnitsService). Please make sure that the argument ProductSamplesService at index [1] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If ProductSamplesService is a provider, is it part of the current RootTestModule?\n    - If ProductSamplesService is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing ProductSamplesService */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m   beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 22 |\u001b[39m     \u001b[36mconst\u001b[39m module\u001b[33m:\u001b[39m \u001b[33mTestingModule\u001b[39m \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 23 |\u001b[39m       providers\u001b[33m:\u001b[39m [\u001b[22m\n\u001b[2m     \u001b[90m 24 |\u001b[39m         \u001b[33mProductUnitsService\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m         {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:254:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:207:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:128:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:143:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:97:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 3)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/product_units/product_units.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:22:35)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mProductUnitsService › create › should create a product unit successfully\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the ProductUnitsService (ProductUnitRepository, ?, UnitsService). Please make sure that the argument ProductSamplesService at index [1] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If ProductSamplesService is a provider, is it part of the current RootTestModule?\n    - If ProductSamplesService is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing ProductSamplesService */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m   beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 22 |\u001b[39m     \u001b[36mconst\u001b[39m module\u001b[33m:\u001b[39m \u001b[33mTestingModule\u001b[39m \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 23 |\u001b[39m       providers\u001b[33m:\u001b[39m [\u001b[22m\n\u001b[2m     \u001b[90m 24 |\u001b[39m         \u001b[33mProductUnitsService\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m         {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:254:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:207:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:128:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:143:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:97:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 3)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/product_units/product_units.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:22:35)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mProductUnitsService › findAll › should return a list of product units\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the ProductUnitsService (ProductUnitRepository, ?, UnitsService). Please make sure that the argument ProductSamplesService at index [1] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If ProductSamplesService is a provider, is it part of the current RootTestModule?\n    - If ProductSamplesService is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing ProductSamplesService */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m   beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 22 |\u001b[39m     \u001b[36mconst\u001b[39m module\u001b[33m:\u001b[39m \u001b[33mTestingModule\u001b[39m \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 23 |\u001b[39m       providers\u001b[33m:\u001b[39m [\u001b[22m\n\u001b[2m     \u001b[90m 24 |\u001b[39m         \u001b[33mProductUnitsService\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m         {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:254:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:207:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:128:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:143:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:97:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 3)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/product_units/product_units.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:22:35)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mProductUnitsService › findOne › should return a single product unit by ID\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the ProductUnitsService (ProductUnitRepository, ?, UnitsService). Please make sure that the argument ProductSamplesService at index [1] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If ProductSamplesService is a provider, is it part of the current RootTestModule?\n    - If ProductSamplesService is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing ProductSamplesService */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m   beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 22 |\u001b[39m     \u001b[36mconst\u001b[39m module\u001b[33m:\u001b[39m \u001b[33mTestingModule\u001b[39m \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 23 |\u001b[39m       providers\u001b[33m:\u001b[39m [\u001b[22m\n\u001b[2m     \u001b[90m 24 |\u001b[39m         \u001b[33mProductUnitsService\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m         {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:254:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:207:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:128:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:143:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:97:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 3)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/product_units/product_units.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:22:35)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mProductUnitsService › findOne › should throw NotFoundException if product unit not found\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the ProductUnitsService (ProductUnitRepository, ?, UnitsService). Please make sure that the argument ProductSamplesService at index [1] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If ProductSamplesService is a provider, is it part of the current RootTestModule?\n    - If ProductSamplesService is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing ProductSamplesService */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m   beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 22 |\u001b[39m     \u001b[36mconst\u001b[39m module\u001b[33m:\u001b[39m \u001b[33mTestingModule\u001b[39m \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 23 |\u001b[39m       providers\u001b[33m:\u001b[39m [\u001b[22m\n\u001b[2m     \u001b[90m 24 |\u001b[39m         \u001b[33mProductUnitsService\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m         {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:254:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:207:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:128:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:143:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:97:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 3)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/product_units/product_units.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:22:35)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mProductUnitsService › update › should update a product unit successfully\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the ProductUnitsService (ProductUnitRepository, ?, UnitsService). Please make sure that the argument ProductSamplesService at index [1] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If ProductSamplesService is a provider, is it part of the current RootTestModule?\n    - If ProductSamplesService is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing ProductSamplesService */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m   beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 22 |\u001b[39m     \u001b[36mconst\u001b[39m module\u001b[33m:\u001b[39m \u001b[33mTestingModule\u001b[39m \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 23 |\u001b[39m       providers\u001b[33m:\u001b[39m [\u001b[22m\n\u001b[2m     \u001b[90m 24 |\u001b[39m         \u001b[33mProductUnitsService\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m         {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:254:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:207:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:128:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:143:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:97:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 3)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/product_units/product_units.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:22:35)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mProductUnitsService › remove › should remove a product unit successfully\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the ProductUnitsService (ProductUnitRepository, ?, UnitsService). Please make sure that the argument ProductSamplesService at index [1] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If ProductSamplesService is a provider, is it part of the current RootTestModule?\n    - If ProductSamplesService is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing ProductSamplesService */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m   beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 22 |\u001b[39m     \u001b[36mconst\u001b[39m module\u001b[33m:\u001b[39m \u001b[33mTestingModule\u001b[39m \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 23 |\u001b[39m       providers\u001b[33m:\u001b[39m [\u001b[22m\n\u001b[2m     \u001b[90m 24 |\u001b[39m         \u001b[33mProductUnitsService\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m         {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:254:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:207:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:128:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:143:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:97:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 3)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/product_units/product_units.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:22:35)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mProductUnitsService › remove › should throw NotFoundException if product unit not found\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the ProductUnitsService (ProductUnitRepository, ?, UnitsService). Please make sure that the argument ProductSamplesService at index [1] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If ProductSamplesService is a provider, is it part of the current RootTestModule?\n    - If ProductSamplesService is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing ProductSamplesService */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m   beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 22 |\u001b[39m     \u001b[36mconst\u001b[39m module\u001b[33m:\u001b[39m \u001b[33mTestingModule\u001b[39m \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 23 |\u001b[39m       providers\u001b[33m:\u001b[39m [\u001b[22m\n\u001b[2m     \u001b[90m 24 |\u001b[39m         \u001b[33mProductUnitsService\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m         {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:254:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:207:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:128:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:143:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/injector.js\u001b[2m:97:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 3)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2m../node_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/product_units/product_units.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:22:35)\u001b[22m\u001b[2m\u001b[22m\n",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_units\\product_units.service.spec.ts",
      "startTime": 1733816554105,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["ProductTypesService"],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductTypesService should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["ProductTypesService", "create"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductTypesService create should create a product type successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a product type successfully"
        },
        {
          "ancestorTitles": ["ProductTypesService", "create"],
          "duration": 63,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mConflictException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể tạo loại sản phẩm\"\u001b[39m\n\n    \u001b[0m \u001b[90m 34 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 35 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo loại sản phẩm:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 36 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể tạo loại sản phẩm'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 37 |\u001b[39m     }\n     \u001b[90m 38 |\u001b[39m   }\n     \u001b[90m 39 |\u001b[39m\u001b[0m\n\n      \u001b[2mat ProductTypesService.create (\u001b[22msrc/modules/product_types/product_types.service.ts\u001b[2m:36:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/product_types/product_types.service.spec.ts\u001b[2m:61:7)\u001b[22m",
                "pass": false
              },
              "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mConflictException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể tạo loại sản phẩm\"\u001b[39m\n\n    \u001b[0m \u001b[90m 34 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 35 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo loại sản phẩm:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 36 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể tạo loại sản phẩm'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 37 |\u001b[39m     }\n     \u001b[90m 38 |\u001b[39m   }\n     \u001b[90m 39 |\u001b[39m\u001b[0m\n\n      \u001b[2mat ProductTypesService.create (\u001b[22msrc/modules/product_types/product_types.service.ts\u001b[2m:36:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/product_types/product_types.service.spec.ts\u001b[2m:61:7)\u001b[22m"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mConflictException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể tạo loại sản phẩm\"\u001b[39m\n\n    \u001b[0m \u001b[90m 34 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 35 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo loại sản phẩm:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 36 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể tạo loại sản phẩm'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 37 |\u001b[39m     }\n     \u001b[90m 38 |\u001b[39m   }\n     \u001b[90m 39 |\u001b[39m\u001b[0m\n\n      \u001b[2mat ProductTypesService.create (\u001b[22msrc/modules/product_types/product_types.service.ts\u001b[2m:36:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/product_types/product_types.service.spec.ts\u001b[2m:61:7)\u001b[22m\n    at Object.toThrow (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\expect\\build\\index.js:218:22)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_types\\product_types.service.spec.ts:61:66)\n    at Promise.then.completed (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"
          ],
          "fullName": "ProductTypesService create should throw ConflictException if name already exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should throw ConflictException if name already exists"
        },
        {
          "ancestorTitles": ["ProductTypesService", "findAll"],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductTypesService findAll should return a list of product types",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a list of product types"
        },
        {
          "ancestorTitles": ["ProductTypesService", "findOne"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductTypesService findOne should return a single product type by ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a single product type by ID"
        },
        {
          "ancestorTitles": ["ProductTypesService", "findOne"],
          "duration": 27,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể tìm loại sản phẩm\"\u001b[39m\n\n    \u001b[0m \u001b[90m  97 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m  98 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi tìm loại sản phẩm với ID ${id}:`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  99 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể tìm loại sản phẩm'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 100 |\u001b[39m     }\n     \u001b[90m 101 |\u001b[39m   }\n     \u001b[90m 102 |\u001b[39m\u001b[0m\n\n      \u001b[2mat ProductTypesService.findOne (\u001b[22msrc/modules/product_types/product_types.service.ts\u001b[2m:99:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/product_types/product_types.service.spec.ts\u001b[2m:95:7)\u001b[22m",
                "pass": false
              },
              "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể tìm loại sản phẩm\"\u001b[39m\n\n    \u001b[0m \u001b[90m  97 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m  98 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi tìm loại sản phẩm với ID ${id}:`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  99 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể tìm loại sản phẩm'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 100 |\u001b[39m     }\n     \u001b[90m 101 |\u001b[39m   }\n     \u001b[90m 102 |\u001b[39m\u001b[0m\n\n      \u001b[2mat ProductTypesService.findOne (\u001b[22msrc/modules/product_types/product_types.service.ts\u001b[2m:99:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/product_types/product_types.service.spec.ts\u001b[2m:95:7)\u001b[22m"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể tìm loại sản phẩm\"\u001b[39m\n\n    \u001b[0m \u001b[90m  97 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m  98 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi tìm loại sản phẩm với ID ${id}:`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  99 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể tìm loại sản phẩm'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 100 |\u001b[39m     }\n     \u001b[90m 101 |\u001b[39m   }\n     \u001b[90m 102 |\u001b[39m\u001b[0m\n\n      \u001b[2mat ProductTypesService.findOne (\u001b[22msrc/modules/product_types/product_types.service.ts\u001b[2m:99:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/product_types/product_types.service.spec.ts\u001b[2m:95:7)\u001b[22m\n    at Object.toThrow (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\expect\\build\\index.js:218:22)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_types\\product_types.service.spec.ts:95:50)\n    at Promise.then.completed (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"
          ],
          "fullName": "ProductTypesService findOne should throw NotFoundException if product type not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should throw NotFoundException if product type not found"
        },
        {
          "ancestorTitles": ["ProductTypesService", "update"],
          "duration": 19,
          "failureDetails": [
            {
              "response": {
                "message": "Không thể cập nhật loại sản phẩm",
                "error": "Internal Server Error",
                "statusCode": 500
              },
              "status": 500,
              "options": {},
              "message": "Không thể cập nhật loại sản phẩm",
              "name": "InternalServerErrorException"
            }
          ],
          "failureMessages": [
            "InternalServerErrorException: Không thể cập nhật loại sản phẩm\n    at ProductTypesService.update (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_types\\product_types.service.ts:127:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_types\\product_types.service.spec.ts:108:22)"
          ],
          "fullName": "ProductTypesService update should update a product type successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should update a product type successfully"
        },
        {
          "ancestorTitles": ["ProductTypesService", "remove"],
          "duration": 17,
          "failureDetails": [
            {
              "response": {
                "message": "Không thể xóa loại sản phẩm",
                "error": "Internal Server Error",
                "statusCode": 500
              },
              "status": 500,
              "options": {},
              "message": "Không thể xóa loại sản phẩm",
              "name": "InternalServerErrorException"
            }
          ],
          "failureMessages": [
            "InternalServerErrorException: Không thể xóa loại sản phẩm\n    at ProductTypesService.remove (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_types\\product_types.service.ts:144:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_types\\product_types.service.spec.ts:120:22)"
          ],
          "fullName": "ProductTypesService remove should remove a product type successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should remove a product type successfully"
        },
        {
          "ancestorTitles": ["ProductTypesService", "remove"],
          "duration": 24,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể xóa loại sản phẩm\"\u001b[39m\n\n    \u001b[0m \u001b[90m 142 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 143 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi xóa loại sản phẩm với ID ${id}:`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 144 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể xóa loại sản phẩm'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 145 |\u001b[39m     }\n     \u001b[90m 146 |\u001b[39m   }\n     \u001b[90m 147 |\u001b[39m }\u001b[0m\n\n      \u001b[2mat ProductTypesService.remove (\u001b[22msrc/modules/product_types/product_types.service.ts\u001b[2m:144:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/product_types/product_types.service.spec.ts\u001b[2m:129:7)\u001b[22m",
                "pass": false
              },
              "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể xóa loại sản phẩm\"\u001b[39m\n\n    \u001b[0m \u001b[90m 142 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 143 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi xóa loại sản phẩm với ID ${id}:`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 144 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể xóa loại sản phẩm'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 145 |\u001b[39m     }\n     \u001b[90m 146 |\u001b[39m   }\n     \u001b[90m 147 |\u001b[39m }\u001b[0m\n\n      \u001b[2mat ProductTypesService.remove (\u001b[22msrc/modules/product_types/product_types.service.ts\u001b[2m:144:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/product_types/product_types.service.spec.ts\u001b[2m:129:7)\u001b[22m"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể xóa loại sản phẩm\"\u001b[39m\n\n    \u001b[0m \u001b[90m 142 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 143 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi xóa loại sản phẩm với ID ${id}:`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 144 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể xóa loại sản phẩm'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 145 |\u001b[39m     }\n     \u001b[90m 146 |\u001b[39m   }\n     \u001b[90m 147 |\u001b[39m }\u001b[0m\n\n      \u001b[2mat ProductTypesService.remove (\u001b[22msrc/modules/product_types/product_types.service.ts\u001b[2m:144:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/product_types/product_types.service.spec.ts\u001b[2m:129:7)\u001b[22m\n    at Object.toThrow (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\expect\\build\\index.js:218:22)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_types\\product_types.service.spec.ts:129:49)\n    at Promise.then.completed (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"
          ],
          "fullName": "ProductTypesService remove should throw NotFoundException if product type not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should throw NotFoundException if product type not found"
        }
      ],
      "endTime": 1733816555387,
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mProductTypesService › create › should throw ConflictException if name already exists\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected constructor: \u001b[32mConflictException\u001b[39m\n    Received constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\n    Received message: \u001b[31m\"Không thể tạo loại sản phẩm\"\u001b[39m\n\n        \u001b[0m \u001b[90m 34 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n         \u001b[90m 35 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo loại sản phẩm:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n        \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 36 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể tạo loại sản phẩm'\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n         \u001b[90m 37 |\u001b[39m     }\n         \u001b[90m 38 |\u001b[39m   }\n         \u001b[90m 39 |\u001b[39m\u001b[0m\n\n          \u001b[2mat ProductTypesService.create (\u001b[22msrc/modules/product_types/product_types.service.ts\u001b[2m:36:13)\u001b[22m\n          \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/product_types/product_types.service.spec.ts\u001b[2m:61:7)\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 59 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 60 |\u001b[39m       \u001b[36mconst\u001b[39m createProductTypeDto \u001b[33m=\u001b[39m { name\u001b[33m:\u001b[39m \u001b[32m'Electronics'\u001b[39m }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 61 |\u001b[39m       \u001b[36mawait\u001b[39m expect(service\u001b[33m.\u001b[39mcreate(createProductTypeDto))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow(\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 62 |\u001b[39m         \u001b[33mConflictException\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 63 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 64 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toThrow (\u001b[22m\u001b[2m../node_modules/expect/build/index.js\u001b[2m:218:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/product_types/product_types.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:61:66)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mProductTypesService › findOne › should throw NotFoundException if product type not found\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected constructor: \u001b[32mNotFoundException\u001b[39m\n    Received constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\n    Received message: \u001b[31m\"Không thể tìm loại sản phẩm\"\u001b[39m\n\n        \u001b[0m \u001b[90m  97 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n         \u001b[90m  98 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi tìm loại sản phẩm với ID ${id}:`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n        \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  99 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể tìm loại sản phẩm'\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n         \u001b[90m 100 |\u001b[39m     }\n         \u001b[90m 101 |\u001b[39m   }\n         \u001b[90m 102 |\u001b[39m\u001b[0m\n\n          \u001b[2mat ProductTypesService.findOne (\u001b[22msrc/modules/product_types/product_types.service.ts\u001b[2m:99:13)\u001b[22m\n          \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/product_types/product_types.service.spec.ts\u001b[2m:95:7)\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 93 |\u001b[39m       mockRepository\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValue(\u001b[36mnull\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 94 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 95 |\u001b[39m       \u001b[36mawait\u001b[39m expect(service\u001b[33m.\u001b[39mfindOne(\u001b[35m999\u001b[39m))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow(\u001b[33mNotFoundException\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 96 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 97 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 98 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toThrow (\u001b[22m\u001b[2m../node_modules/expect/build/index.js\u001b[2m:218:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/product_types/product_types.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:95:50)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mProductTypesService › update › should update a product type successfully\u001b[39m\u001b[22m\n\n    InternalServerErrorException: Không thể cập nhật loại sản phẩm\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 125 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\u001b[22m\n\u001b[2m     \u001b[90m 126 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi cập nhật loại sản phẩm:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 127 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 128 |\u001b[39m         \u001b[32m'Không thể cập nhật loại sản phẩm'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 129 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 130 |\u001b[39m     }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ProductTypesService.update (\u001b[22m\u001b[2mmodules/product_types/product_types.service.ts\u001b[2m:127:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/product_types/product_types.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:108:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mProductTypesService › remove › should remove a product type successfully\u001b[39m\u001b[22m\n\n    InternalServerErrorException: Không thể xóa loại sản phẩm\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 142 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\u001b[22m\n\u001b[2m     \u001b[90m 143 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi xóa loại sản phẩm với ID ${id}:`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 144 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể xóa loại sản phẩm'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 145 |\u001b[39m     }\u001b[22m\n\u001b[2m     \u001b[90m 146 |\u001b[39m   }\u001b[22m\n\u001b[2m     \u001b[90m 147 |\u001b[39m }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ProductTypesService.remove (\u001b[22m\u001b[2mmodules/product_types/product_types.service.ts\u001b[2m:144:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/product_types/product_types.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:120:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mProductTypesService › remove › should throw NotFoundException if product type not found\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected constructor: \u001b[32mNotFoundException\u001b[39m\n    Received constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\n    Received message: \u001b[31m\"Không thể xóa loại sản phẩm\"\u001b[39m\n\n        \u001b[0m \u001b[90m 142 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n         \u001b[90m 143 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi xóa loại sản phẩm với ID ${id}:`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n        \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 144 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể xóa loại sản phẩm'\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n         \u001b[90m 145 |\u001b[39m     }\n         \u001b[90m 146 |\u001b[39m   }\n         \u001b[90m 147 |\u001b[39m }\u001b[0m\n\n          \u001b[2mat ProductTypesService.remove (\u001b[22msrc/modules/product_types/product_types.service.ts\u001b[2m:144:13)\u001b[22m\n          \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/product_types/product_types.service.spec.ts\u001b[2m:129:7)\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 127 |\u001b[39m       mockRepository\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValue(\u001b[36mnull\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 128 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 129 |\u001b[39m       \u001b[36mawait\u001b[39m expect(service\u001b[33m.\u001b[39mremove(\u001b[35m999\u001b[39m))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow(\u001b[33mNotFoundException\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 130 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 131 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 132 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toThrow (\u001b[22m\u001b[2m../node_modules/expect/build/index.js\u001b[2m:218:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/product_types/product_types.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:129:49)\u001b[22m\u001b[2m\u001b[22m\n",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_types\\product_types.service.spec.ts",
      "startTime": 1733816553919,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["GroupsService"],
          "duration": 45,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsService should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["GroupsService", "create"],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsService create should successfully create a group",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should successfully create a group"
        },
        {
          "ancestorTitles": ["GroupsService", "create"],
          "duration": 21,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeInstanceOf\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mConflictException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeInstanceOf\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mConflictException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\groups\\groups.service.spec.ts:66:19)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
          ],
          "fullName": "GroupsService create should throw ConflictException if group already exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should throw ConflictException if group already exists"
        },
        {
          "ancestorTitles": ["GroupsService", "findOne"],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsService findOne should return a group by id",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a group by id"
        },
        {
          "ancestorTitles": ["GroupsService", "findOne"],
          "duration": 5,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeInstanceOf\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeInstanceOf\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\groups\\groups.service.spec.ts:86:19)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
          ],
          "fullName": "GroupsService findOne should throw NotFoundException if group not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should throw NotFoundException if group not found"
        },
        {
          "ancestorTitles": ["GroupsService", "remove"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsService remove should remove a group successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove a group successfully"
        },
        {
          "ancestorTitles": ["GroupsService", "remove"],
          "duration": 9,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeInstanceOf\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeInstanceOf\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\groups\\groups.service.spec.ts:107:19)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
          ],
          "fullName": "GroupsService remove should throw NotFoundException if group not found for removal",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should throw NotFoundException if group not found for removal"
        }
      ],
      "endTime": 1733816555478,
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGroupsService › create › should throw ConflictException if group already exists\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeInstanceOf\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected constructor: \u001b[32mConflictException\u001b[39m\n    Received constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 64 |\u001b[39m         \u001b[36mawait\u001b[39m service\u001b[33m.\u001b[39mcreate(createGroupDto)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 65 |\u001b[39m       } \u001b[36mcatch\u001b[39m (e) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 66 |\u001b[39m         expect(e)\u001b[33m.\u001b[39mtoBeInstanceOf(\u001b[33mConflictException\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 67 |\u001b[39m       }\u001b[22m\n\u001b[2m     \u001b[90m 68 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 69 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/groups/groups.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:66:19)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGroupsService › findOne › should throw NotFoundException if group not found\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeInstanceOf\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected constructor: \u001b[32mNotFoundException\u001b[39m\n    Received constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 84 |\u001b[39m         \u001b[36mawait\u001b[39m service\u001b[33m.\u001b[39mfindOne(\u001b[35m999\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 85 |\u001b[39m       } \u001b[36mcatch\u001b[39m (e) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 86 |\u001b[39m         expect(e)\u001b[33m.\u001b[39mtoBeInstanceOf(\u001b[33mNotFoundException\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 87 |\u001b[39m       }\u001b[22m\n\u001b[2m     \u001b[90m 88 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 89 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/groups/groups.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:86:19)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGroupsService › remove › should throw NotFoundException if group not found for removal\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeInstanceOf\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected constructor: \u001b[32mNotFoundException\u001b[39m\n    Received constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 105 |\u001b[39m         \u001b[36mawait\u001b[39m service\u001b[33m.\u001b[39mremove(\u001b[35m999\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 106 |\u001b[39m       } \u001b[36mcatch\u001b[39m (e) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 107 |\u001b[39m         expect(e)\u001b[33m.\u001b[39mtoBeInstanceOf(\u001b[33mNotFoundException\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 108 |\u001b[39m       }\u001b[22m\n\u001b[2m     \u001b[90m 109 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 110 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/groups/groups.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:107:19)\u001b[22m\u001b[2m\u001b[22m\n",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\groups\\groups.service.spec.ts",
      "startTime": 1733816554001,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["AuthsController"],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthsController should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["AuthsController", "login"],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthsController login should successfully login and return a JWT",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should successfully login and return a JWT"
        },
        {
          "ancestorTitles": ["AuthsController", "login"],
          "duration": 10,
          "failureDetails": [
            {
              "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrowError\u001b[2m()\u001b[22m\n\nReceived promise resolved instead of rejected\nResolved to value: \u001b[31m{\"access_token\": \"jwt_token\", \"user\": {\"address\": \"123 Test St\", \"email\": \"test@example.com\", \"group\": {\"name\": \"user\"}, \"id\": 1, \"name\": \"Test User\", \"phone\": \"123456789\"}}\u001b[39m"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrowError\u001b[2m()\u001b[22m\n\nReceived promise resolved instead of rejected\nResolved to value: \u001b[31m{\"access_token\": \"jwt_token\", \"user\": {\"address\": \"123 Test St\", \"email\": \"test@example.com\", \"group\": {\"name\": \"user\"}, \"id\": 1, \"name\": \"Test User\", \"phone\": \"123456789\"}}\u001b[39m\n    at expect (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\expect\\build\\index.js:113:15)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\auths\\auths.controller.spec.ts:76:13)\n    at Promise.then.completed (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"
          ],
          "fullName": "AuthsController login should throw NotFoundException if user not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should throw NotFoundException if user not found"
        }
      ],
      "endTime": 1733816555590,
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAuthsController › login › should throw NotFoundException if user not found\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrowError\u001b[2m()\u001b[22m\n\n    Received promise resolved instead of rejected\n    Resolved to value: \u001b[31m{\"access_token\": \"jwt_token\", \"user\": {\"address\": \"123 Test St\", \"email\": \"test@example.com\", \"group\": {\"name\": \"user\"}, \"id\": 1, \"name\": \"Test User\", \"phone\": \"123456789\"}}\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 74 |\u001b[39m       mockAuthsService\u001b[33m.\u001b[39mvalidateUser\u001b[33m.\u001b[39mmockResolvedValue(\u001b[36mnull\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// simulate user not found\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 75 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 76 |\u001b[39m       \u001b[36mawait\u001b[39m expect(controller\u001b[33m.\u001b[39mlogin(req))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrowError(\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 77 |\u001b[39m         \u001b[36mnew\u001b[39m \u001b[33mNotFoundException\u001b[39m(\u001b[32m'User not found or invalid credentials'\u001b[39m)\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 78 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 79 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat expect (\u001b[22m\u001b[2m../node_modules/expect/build/index.js\u001b[2m:113:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/auths/auths.controller.spec.ts\u001b[39m\u001b[0m\u001b[2m:76:13)\u001b[22m\u001b[2m\u001b[22m\n",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\auths\\auths.controller.spec.ts",
      "startTime": 1733816553652,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["GroupsController"],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsController should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["GroupsController", "create"],
          "duration": 18,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": {
                  "id": 1,
                  "name": "Group 1",
                  "description": "Description 1"
                },
                "expected": {
                  "message": "Tạo nhóm người dùng thành công",
                  "data": {
                    "id": 1,
                    "name": "Group 1",
                    "description": "Description 1"
                  }
                },
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"data\": Object {\u001b[39m\n\u001b[2m    \"description\": \"Description 1\",\u001b[22m\n\u001b[2m    \"id\": 1,\u001b[22m\n\u001b[2m    \"name\": \"Group 1\",\u001b[22m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"message\": \"Tạo nhóm người dùng thành công\",\u001b[39m\n\u001b[2m  }\u001b[22m",
                "name": "toEqual",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"data\": Object {\u001b[39m\n\u001b[2m    \"description\": \"Description 1\",\u001b[22m\n\u001b[2m    \"id\": 1,\u001b[22m\n\u001b[2m    \"name\": \"Group 1\",\u001b[22m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"message\": \"Tạo nhóm người dùng thành công\",\u001b[39m\n\u001b[2m  }\u001b[22m\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\groups\\groups.controller.spec.ts:45:55)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
          ],
          "fullName": "GroupsController create should create a group successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should create a group successfully"
        },
        {
          "ancestorTitles": ["GroupsController", "create"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsController create should throw a ConflictException if group already exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw a ConflictException if group already exists"
        },
        {
          "ancestorTitles": ["GroupsController", "findAll"],
          "duration": 6,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": { "meta": {}, "results": [] },
                "expected": {
                  "message": "Trả về danh sách các nhóm người dùng thành công",
                  "data": { "meta": {}, "results": [] }
                },
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"data\": Object {\u001b[39m\n\u001b[2m    \"meta\": Object {},\u001b[22m\n\u001b[2m    \"results\": Array [],\u001b[22m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"message\": \"Trả về danh sách các nhóm người dùng thành công\",\u001b[39m\n\u001b[2m  }\u001b[22m",
                "name": "toEqual",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"data\": Object {\u001b[39m\n\u001b[2m    \"meta\": Object {},\u001b[22m\n\u001b[2m    \"results\": Array [],\u001b[22m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"message\": \"Trả về danh sách các nhóm người dùng thành công\",\u001b[39m\n\u001b[2m  }\u001b[22m\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\groups\\groups.controller.spec.ts:73:55)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
          ],
          "fullName": "GroupsController findAll should return all groups",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should return all groups"
        },
        {
          "ancestorTitles": ["GroupsController", "findOne"],
          "duration": 11,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": {
                  "id": 1,
                  "name": "Group 1",
                  "description": "Description 1"
                },
                "expected": {
                  "message": "Trả về thông tin chi tiết nhóm người dùng thành công",
                  "data": {
                    "id": 1,
                    "name": "Group 1",
                    "description": "Description 1"
                  }
                },
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"data\": Object {\u001b[39m\n\u001b[2m    \"description\": \"Description 1\",\u001b[22m\n\u001b[2m    \"id\": 1,\u001b[22m\n\u001b[2m    \"name\": \"Group 1\",\u001b[22m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"message\": \"Trả về thông tin chi tiết nhóm người dùng thành công\",\u001b[39m\n\u001b[2m  }\u001b[22m",
                "name": "toEqual",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"data\": Object {\u001b[39m\n\u001b[2m    \"description\": \"Description 1\",\u001b[22m\n\u001b[2m    \"id\": 1,\u001b[22m\n\u001b[2m    \"name\": \"Group 1\",\u001b[22m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"message\": \"Trả về thông tin chi tiết nhóm người dùng thành công\",\u001b[39m\n\u001b[2m  }\u001b[22m\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\groups\\groups.controller.spec.ts:85:43)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
          ],
          "fullName": "GroupsController findOne should return a group by id",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should return a group by id"
        },
        {
          "ancestorTitles": ["GroupsController", "findOne"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsController findOne should throw a NotFoundException if group is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw a NotFoundException if group is not found"
        },
        {
          "ancestorTitles": ["GroupsController", "update"],
          "duration": 8,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": {
                  "id": 1,
                  "name": "Updated Group",
                  "description": "Description 1"
                },
                "expected": {
                  "message": "Cập nhật thông tin chi tiết nhóm người dùng thành công",
                  "data": {
                    "id": 1,
                    "name": "Updated Group",
                    "description": "Description 1"
                  }
                },
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"data\": Object {\u001b[39m\n\u001b[2m    \"description\": \"Description 1\",\u001b[22m\n\u001b[2m    \"id\": 1,\u001b[22m\n\u001b[2m    \"name\": \"Updated Group\",\u001b[22m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"message\": \"Cập nhật thông tin chi tiết nhóm người dùng thành công\",\u001b[39m\n\u001b[2m  }\u001b[22m",
                "name": "toEqual",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"data\": Object {\u001b[39m\n\u001b[2m    \"description\": \"Description 1\",\u001b[22m\n\u001b[2m    \"id\": 1,\u001b[22m\n\u001b[2m    \"name\": \"Updated Group\",\u001b[22m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"message\": \"Cập nhật thông tin chi tiết nhóm người dùng thành công\",\u001b[39m\n\u001b[2m  }\u001b[22m\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\groups\\groups.controller.spec.ts:114:58)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
          ],
          "fullName": "GroupsController update should update group details",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should update group details"
        },
        {
          "ancestorTitles": ["GroupsController", "remove"],
          "duration": 9,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": {
                  "id": 1,
                  "name": "Group 1",
                  "description": "Description 1"
                },
                "expected": {
                  "message": "Xóa nhóm người dùng thành công",
                  "data": {
                    "id": 1,
                    "name": "Group 1",
                    "description": "Description 1"
                  }
                },
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"data\": Object {\u001b[39m\n\u001b[2m    \"description\": \"Description 1\",\u001b[22m\n\u001b[2m    \"id\": 1,\u001b[22m\n\u001b[2m    \"name\": \"Group 1\",\u001b[22m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"message\": \"Xóa nhóm người dùng thành công\",\u001b[39m\n\u001b[2m  }\u001b[22m",
                "name": "toEqual",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"data\": Object {\u001b[39m\n\u001b[2m    \"description\": \"Description 1\",\u001b[22m\n\u001b[2m    \"id\": 1,\u001b[22m\n\u001b[2m    \"name\": \"Group 1\",\u001b[22m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"message\": \"Xóa nhóm người dùng thành công\",\u001b[39m\n\u001b[2m  }\u001b[22m\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\groups\\groups.controller.spec.ts:126:42)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
          ],
          "fullName": "GroupsController remove should remove a group successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should remove a group successfully"
        },
        {
          "ancestorTitles": ["GroupsController", "assignRolesToGroup"],
          "duration": 13,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": { "id": 1, "name": "Group 1", "roles": [] },
                "expected": {
                  "message": "Gán quyền thành công",
                  "data": { "id": 1, "name": "Group 1", "roles": [] }
                },
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"data\": Object {\u001b[39m\n\u001b[2m    \"id\": 1,\u001b[22m\n\u001b[2m    \"name\": \"Group 1\",\u001b[22m\n\u001b[2m    \"roles\": Array [],\u001b[22m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"message\": \"Gán quyền thành công\",\u001b[39m\n\u001b[2m  }\u001b[22m",
                "name": "toEqual",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 0\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"data\": Object {\u001b[39m\n\u001b[2m    \"id\": 1,\u001b[22m\n\u001b[2m    \"name\": \"Group 1\",\u001b[22m\n\u001b[2m    \"roles\": Array [],\u001b[22m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   \"message\": \"Gán quyền thành công\",\u001b[39m\n\u001b[2m  }\u001b[22m\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\groups\\groups.controller.spec.ts:141:9)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
          ],
          "fullName": "GroupsController assignRolesToGroup should assign roles to a group successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should assign roles to a group successfully"
        },
        {
          "ancestorTitles": ["GroupsController", "assignRolesToGroup"],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GroupsController assignRolesToGroup should throw a NotFoundException if some roles are not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw a NotFoundException if some roles are not found"
        }
      ],
      "endTime": 1733816555624,
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGroupsController › create › should create a group successfully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 3\u001b[39m\n    \u001b[31m+ Received  + 0\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[32m-   \"data\": Object {\u001b[39m\n    \u001b[2m    \"description\": \"Description 1\",\u001b[22m\n    \u001b[2m    \"id\": 1,\u001b[22m\n    \u001b[2m    \"name\": \"Group 1\",\u001b[22m\n    \u001b[32m-   },\u001b[39m\n    \u001b[32m-   \"message\": \"Tạo nhóm người dùng thành công\",\u001b[39m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 43 |\u001b[39m       mockGroupService\u001b[33m.\u001b[39mcreate\u001b[33m.\u001b[39mmockResolvedValue(result)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 44 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 45 |\u001b[39m       expect(\u001b[36mawait\u001b[39m controller\u001b[33m.\u001b[39mcreate(createGroupDto))\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 46 |\u001b[39m         message\u001b[33m:\u001b[39m \u001b[32m'Tạo nhóm người dùng thành công'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 47 |\u001b[39m         data\u001b[33m:\u001b[39m result\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 48 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/groups/groups.controller.spec.ts\u001b[39m\u001b[0m\u001b[2m:45:55)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGroupsController › findAll › should return all groups\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 3\u001b[39m\n    \u001b[31m+ Received  + 0\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[32m-   \"data\": Object {\u001b[39m\n    \u001b[2m    \"meta\": Object {},\u001b[22m\n    \u001b[2m    \"results\": Array [],\u001b[22m\n    \u001b[32m-   },\u001b[39m\n    \u001b[32m-   \"message\": \"Trả về danh sách các nhóm người dùng thành công\",\u001b[39m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 71 |\u001b[39m       mockGroupService\u001b[33m.\u001b[39mfindAll\u001b[33m.\u001b[39mmockResolvedValue(result)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 72 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 73 |\u001b[39m       expect(\u001b[36mawait\u001b[39m controller\u001b[33m.\u001b[39mfindAll(\u001b[32m''\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'1'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'10'\u001b[39m))\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 74 |\u001b[39m         message\u001b[33m:\u001b[39m \u001b[32m'Trả về danh sách các nhóm người dùng thành công'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 75 |\u001b[39m         data\u001b[33m:\u001b[39m result\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 76 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/groups/groups.controller.spec.ts\u001b[39m\u001b[0m\u001b[2m:73:55)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGroupsController › findOne › should return a group by id\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 3\u001b[39m\n    \u001b[31m+ Received  + 0\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[32m-   \"data\": Object {\u001b[39m\n    \u001b[2m    \"description\": \"Description 1\",\u001b[22m\n    \u001b[2m    \"id\": 1,\u001b[22m\n    \u001b[2m    \"name\": \"Group 1\",\u001b[22m\n    \u001b[32m-   },\u001b[39m\n    \u001b[32m-   \"message\": \"Trả về thông tin chi tiết nhóm người dùng thành công\",\u001b[39m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 83 |\u001b[39m       mockGroupService\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValue(result)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 84 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 85 |\u001b[39m       expect(\u001b[36mawait\u001b[39m controller\u001b[33m.\u001b[39mfindOne(\u001b[35m1\u001b[39m))\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 86 |\u001b[39m         message\u001b[33m:\u001b[39m \u001b[32m'Trả về thông tin chi tiết nhóm người dùng thành công'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 87 |\u001b[39m         data\u001b[33m:\u001b[39m result\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 88 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/groups/groups.controller.spec.ts\u001b[39m\u001b[0m\u001b[2m:85:43)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGroupsController › update › should update group details\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 3\u001b[39m\n    \u001b[31m+ Received  + 0\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[32m-   \"data\": Object {\u001b[39m\n    \u001b[2m    \"description\": \"Description 1\",\u001b[22m\n    \u001b[2m    \"id\": 1,\u001b[22m\n    \u001b[2m    \"name\": \"Updated Group\",\u001b[22m\n    \u001b[32m-   },\u001b[39m\n    \u001b[32m-   \"message\": \"Cập nhật thông tin chi tiết nhóm người dùng thành công\",\u001b[39m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 112 |\u001b[39m       mockGroupService\u001b[33m.\u001b[39mupdate\u001b[33m.\u001b[39mmockResolvedValue(result)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 113 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 114 |\u001b[39m       expect(\u001b[36mawait\u001b[39m controller\u001b[33m.\u001b[39mupdate(\u001b[35m1\u001b[39m\u001b[33m,\u001b[39m updateGroupDto))\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 115 |\u001b[39m         message\u001b[33m:\u001b[39m \u001b[32m'Cập nhật thông tin chi tiết nhóm người dùng thành công'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 116 |\u001b[39m         data\u001b[33m:\u001b[39m result\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 117 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/groups/groups.controller.spec.ts\u001b[39m\u001b[0m\u001b[2m:114:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGroupsController › remove › should remove a group successfully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 3\u001b[39m\n    \u001b[31m+ Received  + 0\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[32m-   \"data\": Object {\u001b[39m\n    \u001b[2m    \"description\": \"Description 1\",\u001b[22m\n    \u001b[2m    \"id\": 1,\u001b[22m\n    \u001b[2m    \"name\": \"Group 1\",\u001b[22m\n    \u001b[32m-   },\u001b[39m\n    \u001b[32m-   \"message\": \"Xóa nhóm người dùng thành công\",\u001b[39m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 124 |\u001b[39m       mockGroupService\u001b[33m.\u001b[39mremove\u001b[33m.\u001b[39mmockResolvedValue(result)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 125 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 126 |\u001b[39m       expect(\u001b[36mawait\u001b[39m controller\u001b[33m.\u001b[39mremove(\u001b[35m1\u001b[39m))\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 127 |\u001b[39m         message\u001b[33m:\u001b[39m \u001b[32m'Xóa nhóm người dùng thành công'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 128 |\u001b[39m         data\u001b[33m:\u001b[39m result\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 129 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/groups/groups.controller.spec.ts\u001b[39m\u001b[0m\u001b[2m:126:42)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGroupsController › assignRolesToGroup › should assign roles to a group successfully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 3\u001b[39m\n    \u001b[31m+ Received  + 0\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[32m-   \"data\": Object {\u001b[39m\n    \u001b[2m    \"id\": 1,\u001b[22m\n    \u001b[2m    \"name\": \"Group 1\",\u001b[22m\n    \u001b[2m    \"roles\": Array [],\u001b[22m\n    \u001b[32m-   },\u001b[39m\n    \u001b[32m-   \"message\": \"Gán quyền thành công\",\u001b[39m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 139 |\u001b[39m       expect(\u001b[22m\n\u001b[2m     \u001b[90m 140 |\u001b[39m         \u001b[36mawait\u001b[39m controller\u001b[33m.\u001b[39massignRolesToGroup(\u001b[35m1\u001b[39m\u001b[33m,\u001b[39m updateRoleGroupDto)\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 141 |\u001b[39m       )\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 142 |\u001b[39m         message\u001b[33m:\u001b[39m \u001b[32m'Gán quyền thành công'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 143 |\u001b[39m         data\u001b[33m:\u001b[39m result\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 144 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/groups/groups.controller.spec.ts\u001b[39m\u001b[0m\u001b[2m:141:9)\u001b[22m\u001b[2m\u001b[22m\n",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\groups\\groups.controller.spec.ts",
      "startTime": 1733816553048,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["ProductLinesService"],
          "duration": 37,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductLinesService should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["ProductLinesService", "create"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductLinesService create should create a product line successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a product line successfully"
        },
        {
          "ancestorTitles": ["ProductLinesService", "create"],
          "duration": 134,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mConflictException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể tạo dòng sản phẩm\"\u001b[39m\n\n    \u001b[0m \u001b[90m 45 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 46 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo dòng sản phẩm:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 47 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể tạo dòng sản phẩm'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 48 |\u001b[39m     }\n     \u001b[90m 49 |\u001b[39m   }\n     \u001b[90m 50 |\u001b[39m\u001b[0m\n\n      \u001b[2mat ProductLinesService.create (\u001b[22msrc/modules/product_lines/product_lines.service.ts\u001b[2m:47:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/product_lines/product_lines.service.spec.ts\u001b[2m:87:7)\u001b[22m",
                "pass": false
              },
              "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mConflictException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể tạo dòng sản phẩm\"\u001b[39m\n\n    \u001b[0m \u001b[90m 45 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 46 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo dòng sản phẩm:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 47 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể tạo dòng sản phẩm'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 48 |\u001b[39m     }\n     \u001b[90m 49 |\u001b[39m   }\n     \u001b[90m 50 |\u001b[39m\u001b[0m\n\n      \u001b[2mat ProductLinesService.create (\u001b[22msrc/modules/product_lines/product_lines.service.ts\u001b[2m:47:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/product_lines/product_lines.service.spec.ts\u001b[2m:87:7)\u001b[22m"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mConflictException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể tạo dòng sản phẩm\"\u001b[39m\n\n    \u001b[0m \u001b[90m 45 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 46 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo dòng sản phẩm:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 47 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể tạo dòng sản phẩm'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 48 |\u001b[39m     }\n     \u001b[90m 49 |\u001b[39m   }\n     \u001b[90m 50 |\u001b[39m\u001b[0m\n\n      \u001b[2mat ProductLinesService.create (\u001b[22msrc/modules/product_lines/product_lines.service.ts\u001b[2m:47:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/product_lines/product_lines.service.spec.ts\u001b[2m:87:7)\u001b[22m\n    at Object.toThrow (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\expect\\build\\index.js:218:22)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_lines\\product_lines.service.spec.ts:87:55)\n    at Promise.then.completed (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"
          ],
          "fullName": "ProductLinesService create should throw ConflictException if name already exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should throw ConflictException if name already exists"
        },
        {
          "ancestorTitles": ["ProductLinesService", "create"],
          "duration": 26,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể tạo dòng sản phẩm\"\u001b[39m\n\n    \u001b[0m \u001b[90m 45 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 46 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo dòng sản phẩm:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 47 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể tạo dòng sản phẩm'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 48 |\u001b[39m     }\n     \u001b[90m 49 |\u001b[39m   }\n     \u001b[90m 50 |\u001b[39m\u001b[0m\n\n      \u001b[2mat ProductLinesService.create (\u001b[22msrc/modules/product_lines/product_lines.service.ts\u001b[2m:47:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/product_lines/product_lines.service.spec.ts\u001b[2m:102:7)\u001b[22m",
                "pass": false
              },
              "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể tạo dòng sản phẩm\"\u001b[39m\n\n    \u001b[0m \u001b[90m 45 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 46 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo dòng sản phẩm:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 47 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể tạo dòng sản phẩm'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 48 |\u001b[39m     }\n     \u001b[90m 49 |\u001b[39m   }\n     \u001b[90m 50 |\u001b[39m\u001b[0m\n\n      \u001b[2mat ProductLinesService.create (\u001b[22msrc/modules/product_lines/product_lines.service.ts\u001b[2m:47:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/product_lines/product_lines.service.spec.ts\u001b[2m:102:7)\u001b[22m"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể tạo dòng sản phẩm\"\u001b[39m\n\n    \u001b[0m \u001b[90m 45 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 46 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo dòng sản phẩm:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 47 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể tạo dòng sản phẩm'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 48 |\u001b[39m     }\n     \u001b[90m 49 |\u001b[39m   }\n     \u001b[90m 50 |\u001b[39m\u001b[0m\n\n      \u001b[2mat ProductLinesService.create (\u001b[22msrc/modules/product_lines/product_lines.service.ts\u001b[2m:47:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/product_lines/product_lines.service.spec.ts\u001b[2m:102:7)\u001b[22m\n    at Object.toThrow (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\expect\\build\\index.js:218:22)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_lines\\product_lines.service.spec.ts:102:55)\n    at Promise.then.completed (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"
          ],
          "fullName": "ProductLinesService create should throw NotFoundException if product type not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should throw NotFoundException if product type not found"
        },
        {
          "ancestorTitles": ["ProductLinesService", "findAll"],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductLinesService findAll should return a list of product lines with meta",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a list of product lines with meta"
        },
        {
          "ancestorTitles": ["ProductLinesService", "findOne"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductLinesService findOne should return a single product line by ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a single product line by ID"
        },
        {
          "ancestorTitles": ["ProductLinesService", "findOne"],
          "duration": 17,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể tìm dòng sản phẩm\"\u001b[39m\n\n    \u001b[0m \u001b[90m 119 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 120 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi tìm dòng sản phẩm với ID ${id}:`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể tìm dòng sản phẩm'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 122 |\u001b[39m     }\n     \u001b[90m 123 |\u001b[39m   }\n     \u001b[90m 124 |\u001b[39m\u001b[0m\n\n      \u001b[2mat ProductLinesService.findOne (\u001b[22msrc/modules/product_lines/product_lines.service.ts\u001b[2m:121:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/product_lines/product_lines.service.spec.ts\u001b[2m:137:7)\u001b[22m",
                "pass": false
              },
              "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể tìm dòng sản phẩm\"\u001b[39m\n\n    \u001b[0m \u001b[90m 119 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 120 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi tìm dòng sản phẩm với ID ${id}:`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể tìm dòng sản phẩm'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 122 |\u001b[39m     }\n     \u001b[90m 123 |\u001b[39m   }\n     \u001b[90m 124 |\u001b[39m\u001b[0m\n\n      \u001b[2mat ProductLinesService.findOne (\u001b[22msrc/modules/product_lines/product_lines.service.ts\u001b[2m:121:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/product_lines/product_lines.service.spec.ts\u001b[2m:137:7)\u001b[22m"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mNotFoundException\u001b[39m\nReceived constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\nReceived message: \u001b[31m\"Không thể tìm dòng sản phẩm\"\u001b[39m\n\n    \u001b[0m \u001b[90m 119 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 120 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi tìm dòng sản phẩm với ID ${id}:`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể tìm dòng sản phẩm'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 122 |\u001b[39m     }\n     \u001b[90m 123 |\u001b[39m   }\n     \u001b[90m 124 |\u001b[39m\u001b[0m\n\n      \u001b[2mat ProductLinesService.findOne (\u001b[22msrc/modules/product_lines/product_lines.service.ts\u001b[2m:121:13)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/product_lines/product_lines.service.spec.ts\u001b[2m:137:7)\u001b[22m\n    at Object.toThrow (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\expect\\build\\index.js:218:22)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_lines\\product_lines.service.spec.ts:137:50)\n    at Promise.then.completed (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (D:\\SE100\\Project\\pj-02-mart-management-be\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"
          ],
          "fullName": "ProductLinesService findOne should throw NotFoundException if product line not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should throw NotFoundException if product line not found"
        },
        {
          "ancestorTitles": ["ProductLinesService", "update"],
          "duration": 4,
          "failureDetails": [
            {
              "response": {
                "message": "Không thể cập nhật dòng sản phẩm",
                "error": "Internal Server Error",
                "statusCode": 500
              },
              "status": 500,
              "options": {},
              "message": "Không thể cập nhật dòng sản phẩm",
              "name": "InternalServerErrorException"
            }
          ],
          "failureMessages": [
            "InternalServerErrorException: Không thể cập nhật dòng sản phẩm\n    at ProductLinesService.update (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_lines\\product_lines.service.ts:164:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Object.<anonymous> (D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_lines\\product_lines.service.spec.ts:150:22)"
          ],
          "fullName": "ProductLinesService update should update a product line successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should update a product line successfully"
        },
        {
          "ancestorTitles": ["ProductLinesService", "remove"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductLinesService remove should remove a product line successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove a product line successfully"
        }
      ],
      "endTime": 1733816556118,
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mProductLinesService › create › should throw ConflictException if name already exists\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected constructor: \u001b[32mConflictException\u001b[39m\n    Received constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\n    Received message: \u001b[31m\"Không thể tạo dòng sản phẩm\"\u001b[39m\n\n        \u001b[0m \u001b[90m 45 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n         \u001b[90m 46 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo dòng sản phẩm:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n        \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 47 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể tạo dòng sản phẩm'\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n         \u001b[90m 48 |\u001b[39m     }\n         \u001b[90m 49 |\u001b[39m   }\n         \u001b[90m 50 |\u001b[39m\u001b[0m\n\n          \u001b[2mat ProductLinesService.create (\u001b[22msrc/modules/product_lines/product_lines.service.ts\u001b[2m:47:13)\u001b[22m\n          \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/product_lines/product_lines.service.spec.ts\u001b[2m:87:7)\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 85 |\u001b[39m       mockRepository\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValue({ id\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m name\u001b[33m:\u001b[39m \u001b[32m'Line 1'\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 86 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 87 |\u001b[39m       \u001b[36mawait\u001b[39m expect(service\u001b[33m.\u001b[39mcreate(createDto))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow(\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 88 |\u001b[39m         \u001b[33mConflictException\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 89 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 90 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toThrow (\u001b[22m\u001b[2m../node_modules/expect/build/index.js\u001b[2m:218:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/product_lines/product_lines.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:87:55)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mProductLinesService › create › should throw NotFoundException if product type not found\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected constructor: \u001b[32mNotFoundException\u001b[39m\n    Received constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\n    Received message: \u001b[31m\"Không thể tạo dòng sản phẩm\"\u001b[39m\n\n        \u001b[0m \u001b[90m 45 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n         \u001b[90m 46 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi tạo dòng sản phẩm:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n        \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 47 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể tạo dòng sản phẩm'\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n         \u001b[90m 48 |\u001b[39m     }\n         \u001b[90m 49 |\u001b[39m   }\n         \u001b[90m 50 |\u001b[39m\u001b[0m\n\n          \u001b[2mat ProductLinesService.create (\u001b[22msrc/modules/product_lines/product_lines.service.ts\u001b[2m:47:13)\u001b[22m\n          \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/product_lines/product_lines.service.spec.ts\u001b[2m:102:7)\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 100 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 101 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 102 |\u001b[39m       \u001b[36mawait\u001b[39m expect(service\u001b[33m.\u001b[39mcreate(createDto))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow(\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 103 |\u001b[39m         \u001b[33mNotFoundException\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 104 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 105 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toThrow (\u001b[22m\u001b[2m../node_modules/expect/build/index.js\u001b[2m:218:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/product_lines/product_lines.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:102:55)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mProductLinesService › findOne › should throw NotFoundException if product line not found\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected constructor: \u001b[32mNotFoundException\u001b[39m\n    Received constructor: \u001b[31mInternalServerErrorException\u001b[39m\n\n    Received message: \u001b[31m\"Không thể tìm dòng sản phẩm\"\u001b[39m\n\n        \u001b[0m \u001b[90m 119 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n         \u001b[90m 120 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m`Lỗi khi tìm dòng sản phẩm với ID ${id}:`\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\n        \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[32m'Không thể tìm dòng sản phẩm'\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n         \u001b[90m 122 |\u001b[39m     }\n         \u001b[90m 123 |\u001b[39m   }\n         \u001b[90m 124 |\u001b[39m\u001b[0m\n\n          \u001b[2mat ProductLinesService.findOne (\u001b[22msrc/modules/product_lines/product_lines.service.ts\u001b[2m:121:13)\u001b[22m\n          \u001b[2mat Object.<anonymous> (\u001b[22msrc/modules/product_lines/product_lines.service.spec.ts\u001b[2m:137:7)\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 135 |\u001b[39m       mockRepository\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValue(\u001b[36mnull\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 136 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 137 |\u001b[39m       \u001b[36mawait\u001b[39m expect(service\u001b[33m.\u001b[39mfindOne(\u001b[35m999\u001b[39m))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow(\u001b[33mNotFoundException\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 138 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 139 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 140 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toThrow (\u001b[22m\u001b[2m../node_modules/expect/build/index.js\u001b[2m:218:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/product_lines/product_lines.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:137:50)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mProductLinesService › update › should update a product line successfully\u001b[39m\u001b[22m\n\n    InternalServerErrorException: Không thể cập nhật dòng sản phẩm\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 162 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\u001b[22m\n\u001b[2m     \u001b[90m 163 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'Lỗi khi cập nhật dòng sản phẩm:'\u001b[39m\u001b[33m,\u001b[39m error\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 164 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInternalServerErrorException\u001b[39m(\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 165 |\u001b[39m         \u001b[32m'Không thể cập nhật dòng sản phẩm'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 166 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 167 |\u001b[39m     }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ProductLinesService.update (\u001b[22m\u001b[2mmodules/product_lines/product_lines.service.ts\u001b[2m:164:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/product_lines/product_lines.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:150:22)\u001b[22m\u001b[2m\u001b[22m\n",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_lines\\product_lines.service.spec.ts",
      "startTime": 1733816554625,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["BatchsController"],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BatchsController should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["BatchsController"],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BatchsController should create a batch",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a batch"
        },
        {
          "ancestorTitles": ["BatchsController"],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BatchsController should return all batches",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return all batches"
        },
        {
          "ancestorTitles": ["BatchsController"],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BatchsController should return a batch by ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a batch by ID"
        },
        {
          "ancestorTitles": ["BatchsController"],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BatchsController should update a batch",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should update a batch"
        },
        {
          "ancestorTitles": ["BatchsController"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BatchsController should delete a batch",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should delete a batch"
        }
      ],
      "endTime": 1733816556287,
      "message": "",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\batchs\\batchs.controller.spec.ts",
      "startTime": 1733816554690,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["SuppliersController"],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SuppliersController should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["SuppliersController", "create"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SuppliersController create should create a supplier successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a supplier successfully"
        },
        {
          "ancestorTitles": ["SuppliersController", "create"],
          "duration": 19,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SuppliersController create should throw ConflictException if supplier name already exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw ConflictException if supplier name already exists"
        },
        {
          "ancestorTitles": ["SuppliersController", "findAll"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SuppliersController findAll should return all suppliers",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return all suppliers"
        },
        {
          "ancestorTitles": ["SuppliersController", "findOne"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SuppliersController findOne should return a supplier by ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a supplier by ID"
        },
        {
          "ancestorTitles": ["SuppliersController", "findOne"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SuppliersController findOne should throw NotFoundException if supplier is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw NotFoundException if supplier is not found"
        },
        {
          "ancestorTitles": ["SuppliersController", "update"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SuppliersController update should update a supplier successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should update a supplier successfully"
        },
        {
          "ancestorTitles": ["SuppliersController", "remove"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SuppliersController remove should remove a supplier successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove a supplier successfully"
        }
      ],
      "endTime": 1733816557012,
      "message": "",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\suppliers\\suppliers.controller.spec.ts",
      "startTime": 1733816555658,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["ProductUnitsController"],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductUnitsController should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["ProductUnitsController", "create"],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductUnitsController create should create a product unit successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a product unit successfully"
        },
        {
          "ancestorTitles": ["ProductUnitsController", "findAll"],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductUnitsController findAll should return a list of product units",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a list of product units"
        },
        {
          "ancestorTitles": ["ProductUnitsController", "findOne"],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductUnitsController findOne should return a single product unit by ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a single product unit by ID"
        },
        {
          "ancestorTitles": ["ProductUnitsController", "findOne"],
          "duration": 19,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductUnitsController findOne should throw NotFoundException if product unit not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw NotFoundException if product unit not found"
        },
        {
          "ancestorTitles": ["ProductUnitsController", "update"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductUnitsController update should update a product unit successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should update a product unit successfully"
        },
        {
          "ancestorTitles": ["ProductUnitsController", "remove"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductUnitsController remove should remove a product unit successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove a product unit successfully"
        }
      ],
      "endTime": 1733816557076,
      "message": "",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_units\\product_units.controller.spec.ts",
      "startTime": 1733816555442,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["ProductTypesController"],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductTypesController should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["ProductTypesController", "create"],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductTypesController create should create a product type successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a product type successfully"
        },
        {
          "ancestorTitles": ["ProductTypesController", "create"],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductTypesController create should throw ConflictException if name already exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw ConflictException if name already exists"
        },
        {
          "ancestorTitles": ["ProductTypesController", "findAll"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductTypesController findAll should return a list of product types",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a list of product types"
        },
        {
          "ancestorTitles": ["ProductTypesController", "findOne"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductTypesController findOne should return a single product type by ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a single product type by ID"
        },
        {
          "ancestorTitles": ["ProductTypesController", "findOne"],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductTypesController findOne should throw NotFoundException if product type not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw NotFoundException if product type not found"
        },
        {
          "ancestorTitles": ["ProductTypesController", "update"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductTypesController update should update a product type successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should update a product type successfully"
        },
        {
          "ancestorTitles": ["ProductTypesController", "remove"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductTypesController remove should remove a product type successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove a product type successfully"
        },
        {
          "ancestorTitles": ["ProductTypesController", "remove"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductTypesController remove should throw NotFoundException if product type not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw NotFoundException if product type not found"
        }
      ],
      "endTime": 1733816557126,
      "message": "",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_types\\product_types.controller.spec.ts",
      "startTime": 1733816555387,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["ProductLinesController"],
          "duration": 25,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductLinesController should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["ProductLinesController", "create"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductLinesController create should create a product line successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a product line successfully"
        },
        {
          "ancestorTitles": ["ProductLinesController", "findAll"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductLinesController findAll should return a list of product lines",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a list of product lines"
        },
        {
          "ancestorTitles": ["ProductLinesController", "findOne"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductLinesController findOne should return a single product line by ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a single product line by ID"
        },
        {
          "ancestorTitles": ["ProductLinesController", "update"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductLinesController update should update a product line successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should update a product line successfully"
        },
        {
          "ancestorTitles": ["ProductLinesController", "remove"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductLinesController remove should remove a product line successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove a product line successfully"
        }
      ],
      "endTime": 1733816557188,
      "message": "",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_lines\\product_lines.controller.spec.ts",
      "startTime": 1733816555518,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["AuthsService"],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthsService should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["AuthsService", "validateUser"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthsService validateUser should return user when valid credentials are provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return user when valid credentials are provided"
        },
        {
          "ancestorTitles": ["AuthsService", "validateUser"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthsService validateUser should return null if user is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null if user is not found"
        },
        {
          "ancestorTitles": ["AuthsService", "validateUser"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthsService validateUser should return null if password is incorrect",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null if password is incorrect"
        },
        {
          "ancestorTitles": ["AuthsService", "login"],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthsService login should return JWT token on successful login",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return JWT token on successful login"
        }
      ],
      "endTime": 1733816557327,
      "message": "",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\auths\\auths.service.spec.ts",
      "startTime": 1733816556321,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["UnitsController"],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnitsController should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["UnitsController", "create"],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnitsController create should create a unit successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a unit successfully"
        },
        {
          "ancestorTitles": ["UnitsController", "create"],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnitsController create should throw a ConflictException if unit name already exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw a ConflictException if unit name already exists"
        },
        {
          "ancestorTitles": ["UnitsController", "findAll"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnitsController findAll should return all units",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return all units"
        },
        {
          "ancestorTitles": ["UnitsController", "findOne"],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnitsController findOne should return a unit by ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a unit by ID"
        },
        {
          "ancestorTitles": ["UnitsController", "findOne"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnitsController findOne should throw NotFoundException if unit is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw NotFoundException if unit is not found"
        },
        {
          "ancestorTitles": ["UnitsController", "update"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnitsController update should update a unit successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should update a unit successfully"
        },
        {
          "ancestorTitles": ["UnitsController", "remove"],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnitsController remove should remove a unit successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove a unit successfully"
        }
      ],
      "endTime": 1733816557404,
      "message": "",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\units\\units.controller.spec.ts",
      "startTime": 1733816555612,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["ProductSamplesController"],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductSamplesController should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["ProductSamplesController", "create"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductSamplesController create should create a product sample with units successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a product sample with units successfully"
        },
        {
          "ancestorTitles": ["ProductSamplesController", "findAll"],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductSamplesController findAll should return a list of product samples",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a list of product samples"
        },
        {
          "ancestorTitles": ["ProductSamplesController", "findOne"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductSamplesController findOne should return a single product sample by ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a single product sample by ID"
        },
        {
          "ancestorTitles": ["ProductSamplesController", "findOne"],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductSamplesController findOne should throw NotFoundException if product sample not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw NotFoundException if product sample not found"
        },
        {
          "ancestorTitles": ["ProductSamplesController", "update"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductSamplesController update should update a product sample successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should update a product sample successfully"
        },
        {
          "ancestorTitles": ["ProductSamplesController", "remove"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductSamplesController remove should remove a product sample successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove a product sample successfully"
        },
        {
          "ancestorTitles": ["ProductSamplesController", "remove"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ProductSamplesController remove should throw NotFoundException if product sample not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw NotFoundException if product sample not found"
        }
      ],
      "endTime": 1733816557483,
      "message": "",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_samples\\product_samples.controller.spec.ts",
      "startTime": 1733816556162,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["SupplierProductsController"],
          "duration": 35,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SupplierProductsController should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["SupplierProductsController", "findAll"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SupplierProductsController findAll should return a list of supplier products",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a list of supplier products"
        },
        {
          "ancestorTitles": ["SupplierProductsController", "findAll"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SupplierProductsController findAll should return an empty list if no products are found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return an empty list if no products are found"
        }
      ],
      "endTime": 1733816557969,
      "message": "",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\supplier_products\\supplier_products.controller.spec.ts",
      "startTime": 1733816557030,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["RolesService"],
          "duration": 23,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RolesService should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["RolesService", "findAll"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RolesService findAll should return a list of roles with pagination",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a list of roles with pagination"
        },
        {
          "ancestorTitles": ["RolesService", "findAll"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RolesService findAll should return an empty list if no roles are found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return an empty list if no roles are found"
        },
        {
          "ancestorTitles": ["RolesService", "findAll"],
          "duration": 19,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RolesService findAll should throw InternalServerErrorException on database error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw InternalServerErrorException on database error"
        },
        {
          "ancestorTitles": ["RolesService", "findByIds"],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RolesService findByIds should return roles matching given IDs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return roles matching given IDs"
        },
        {
          "ancestorTitles": ["RolesService", "findByIds"],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RolesService findByIds should return an empty list if no roles match the given IDs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return an empty list if no roles match the given IDs"
        }
      ],
      "endTime": 1733816558120,
      "message": "",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\roles\\roles.service.spec.ts",
      "startTime": 1733816557220,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [],
      "coverage": {},
      "endTime": 1733816564719,
      "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Your test suite must contain at least one test.\n\n      \u001b[2mat onResult (\u001b[22m../node_modules/@jest/core/build/TestScheduler.js\u001b[2m:133:18)\u001b[22m\n      \u001b[2mat \u001b[22m../node_modules/@jest/core/build/TestScheduler.js\u001b[2m:254:19\u001b[22m\n      \u001b[2mat \u001b[22m../node_modules/emittery/index.js\u001b[2m:363:13\u001b[22m\n          at Array.map (<anonymous>)\n      \u001b[2mat Emittery.emit (\u001b[22m../node_modules/emittery/index.js\u001b[2m:361:23)\u001b[22m\n",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\product_samples\\product_samples.service.spec.ts",
      "startTime": 1733816564719,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["SupplierProductsService"],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SupplierProductsService should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["SupplierProductsService", "findAll"],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SupplierProductsService findAll should return a list of supplier products",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a list of supplier products"
        },
        {
          "ancestorTitles": ["SupplierProductsService", "findAll"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SupplierProductsService findAll should return an empty list if no products are found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return an empty list if no products are found"
        }
      ],
      "endTime": 1733816558354,
      "message": "",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\supplier_products\\supplier_products.service.spec.ts",
      "startTime": 1733816557346,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [],
      "coverage": {},
      "endTime": 1733816564719,
      "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Your test suite must contain at least one test.\n\n      \u001b[2mat onResult (\u001b[22m../node_modules/@jest/core/build/TestScheduler.js\u001b[2m:133:18)\u001b[22m\n      \u001b[2mat \u001b[22m../node_modules/@jest/core/build/TestScheduler.js\u001b[2m:254:19\u001b[22m\n      \u001b[2mat \u001b[22m../node_modules/emittery/index.js\u001b[2m:363:13\u001b[22m\n          at Array.map (<anonymous>)\n      \u001b[2mat Emittery.emit (\u001b[22m../node_modules/emittery/index.js\u001b[2m:361:23)\u001b[22m\n",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\inbound_receipt\\inbound_receipt.service.spec.ts",
      "startTime": 1733816564719,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["OrderDetailsController"],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "OrderDetailsController should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["OrderDetailsController", "create"],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "OrderDetailsController create should successfully create an order detail",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should successfully create an order detail"
        },
        {
          "ancestorTitles": ["OrderDetailsController", "create"],
          "duration": 19,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "OrderDetailsController create should throw NotFoundException if order is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw NotFoundException if order is not found"
        },
        {
          "ancestorTitles": ["OrderDetailsController", "create"],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "OrderDetailsController create should throw InternalServerErrorException if creation fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw InternalServerErrorException if creation fails"
        }
      ],
      "endTime": 1733816558398,
      "message": "",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\order_details\\order_details.controller.spec.ts",
      "startTime": 1733816557144,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["ParametersController"],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ParametersController should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["ParametersController", "create"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ParametersController create should create a parameter successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a parameter successfully"
        },
        {
          "ancestorTitles": ["ParametersController", "findAll"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ParametersController findAll should return all parameters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return all parameters"
        },
        {
          "ancestorTitles": ["ParametersController", "findOne"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ParametersController findOne should return a parameter by ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a parameter by ID"
        },
        {
          "ancestorTitles": ["ParametersController", "findOne"],
          "duration": 34,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ParametersController findOne should throw NotFoundException if parameter not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw NotFoundException if parameter not found"
        },
        {
          "ancestorTitles": ["ParametersController", "update"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ParametersController update should update a parameter successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should update a parameter successfully"
        },
        {
          "ancestorTitles": ["ParametersController", "remove"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ParametersController remove should remove a parameter successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove a parameter successfully"
        }
      ],
      "endTime": 1733816558390,
      "message": "",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\parameters\\parameters.controller.spec.ts",
      "startTime": 1733816557094,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [],
      "coverage": {},
      "endTime": 1733816564719,
      "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Your test suite must contain at least one test.\n\n      \u001b[2mat onResult (\u001b[22m../node_modules/@jest/core/build/TestScheduler.js\u001b[2m:133:18)\u001b[22m\n      \u001b[2mat \u001b[22m../node_modules/@jest/core/build/TestScheduler.js\u001b[2m:254:19\u001b[22m\n      \u001b[2mat \u001b[22m../node_modules/emittery/index.js\u001b[2m:363:13\u001b[22m\n          at Array.map (<anonymous>)\n      \u001b[2mat Emittery.emit (\u001b[22m../node_modules/emittery/index.js\u001b[2m:361:23)\u001b[22m\n",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\inbound_receipt\\inbound_receipt.controller.spec.ts",
      "startTime": 1733816564719,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["RolesController"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RolesController should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["RolesController", "findAll"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RolesController findAll should return a list of roles with pagination",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a list of roles with pagination"
        },
        {
          "ancestorTitles": ["RolesController", "findAll"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RolesController findAll should return an empty list if no roles are found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return an empty list if no roles are found"
        }
      ],
      "endTime": 1733816558458,
      "message": "",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\roles\\roles.controller.spec.ts",
      "startTime": 1733816557505,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["BatchsService"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BatchsService should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": ["BatchsService"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BatchsService should create a batch",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a batch"
        },
        {
          "ancestorTitles": ["BatchsService"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BatchsService should return all batches",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return all batches"
        },
        {
          "ancestorTitles": ["BatchsService"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BatchsService should return a batch by ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a batch by ID"
        },
        {
          "ancestorTitles": ["BatchsService"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BatchsService should update a batch",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should update a batch"
        },
        {
          "ancestorTitles": ["BatchsService"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BatchsService should delete a batch",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should delete a batch"
        }
      ],
      "endTime": 1733816558533,
      "message": "",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\batchs\\batchs.service.spec.ts",
      "startTime": 1733816557421,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [],
      "coverage": {},
      "endTime": 1733816564719,
      "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/modules/orders/orders.service.spec.ts\u001b[0m:\u001b[93m115\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ id: number; totalPrice: number; paymentMethod: string; paymentTime: Date; status: string; orderType: string; isReceived: number; isPaid: number; createdAt: Date; deletedAt: any; customer: { ...; }; staff: { ...; }; orderDetails: { ...; }[]; }' is not assignable to parameter of type 'Order | Promise<Order>'.\n      Type '{ id: number; totalPrice: number; paymentMethod: string; paymentTime: Date; status: string; orderType: string; isReceived: number; isPaid: number; createdAt: Date; deletedAt: any; customer: { ...; }; staff: { ...; }; orderDetails: { ...; }[]; }' is not assignable to type 'Order'.\n        Types of property 'customer' are incompatible.\n          Type '{ id: number; name: string; email: string; password: string; score: number; address: string; phone: string; isActive: number; codeId: string; codeExpired: Date; createdAt: Date; deletedAt: any; }' is missing the following properties from type 'User': group, customerOrders, staffOrders, inboundReceipts\n\n    \u001b[7m115\u001b[0m       jest.spyOn(service, 'create').mockResolvedValue(order);\n    \u001b[7m   \u001b[0m \u001b[91m                                                      ~~~~~\u001b[0m\n",
      "name": "D:\\SE100\\Project\\pj-02-mart-management-be\\src\\modules\\orders\\orders.service.spec.ts",
      "startTime": 1733816564719,
      "status": "failed",
      "summary": ""
    }
  ],
  "wasInterrupted": false
}
